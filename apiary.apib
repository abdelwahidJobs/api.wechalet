FORMAT: 1A
HOST: https://wechalet.amalyet.com/

# api.wechalet

Rest API for wechalet a cabin rental agency in Austin, Quebec, Canada.


## Rules [/api/rules GET]
Retrieve all rules
### api/rules [GET]
+ Request (application/json)

        {
            "api_token": ""
        }
+ Response 200 (application/json)

    + Body

            {
                  "data": [
                    {
                      "id": "24727c8a-7174-4f44-8565-f67bbb07b56d",
                      "name": "Allow childrens",
                      "slug": "allow_childrens"
                    },
                    {
                      "id": "d3371dda-8a1d-46ac-b89e-8f2d95a09448",
                      "name": "allow infants",
                      "slug": "allow_infants"
                    },
                    {
                      "id": "eefb6b04-8d2f-476f-9dae-cc9d1039c5ba",
                      "name": "allow pets",
                      "slug": "allow_pets"
                    },
                    {
                      "id": "ade30280-126f-4824-96dc-f13bc3cc3af5",
                      "name": "allow smoking",
                      "slug": "allow_smoking"
                    },
                    {
                      "id": "94ddbc6d-98c3-40a2-9a3e-59e4291f34d0",
                      "name": "allow parties",
                      "slug": "allow_parties"
                    }
                  ]
                }
                
+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }


## Get property rules [/api/v1/properties/{uuid}/rules GET]
Retrieve rules associated to the provided property id
with a value attached for each rule 
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/rules [GET]
+ Request (application/json)


        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
              "data": [
                "allow_childrens": true,
                "allow_infants": true,
                "allow_pets": true,
                "allow_smoking": true,
                "allow_parties": true
              ]
            }
            


+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"

             }
             
## Set property rules [/api/v1/properties/{uuid}/rules POST]
Edit rules associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property
    

    
### api/v1/properties/{uuid}/rules [PUT]

+ Request (application/json)

    The request must contient the rules.

    + rules
    + `allow_childrens` boolean.
    + `allow_infants` boolean.
    + `allow_pets` boolean.
    + `allow_smoking` boolean.
    + `allow_parties` boolean.

    + Body

            {
                "api_token": "",
                "rules" : {
                    "allow_childrens": true,
                    "allow_infants": true,
                    "allow_pets": true,
                    "allow_smoking": false,
                    "allow_parties": true
                }
            }


+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                            "allow_childrens": true,
                            "allow_infants": true,
                            "allow_pets": true,
                            "allow_smoking": false,
                            "allow_parties": true
                      }
            }

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
+ Response 422 (application/json)

    + Body

             {
                    "message": "The given data was invalid.",
                      "errors": {
                        "rules": [
                          "The rules field is required."
                        ],
                        "rules.allow_childrens": [
                          "The rules.children are welcome 2 to 12 years old field is required."
                        ],
                        "rules.allow_infants": [
                          "The rules.infants under 2 years old are welcome field is required."
                        ],
                        "rules.allow_pets": [
                          "The rules.pets are welcome field is required."
                        ],
                        "rules.allow_smoking": [
                          "The rules.smoking inside is allowed field is required."
                        ],
                        "rules.allow_parties": [
                          "The rules.parties and events are allowed field is required."
                        ]
                      }
             }
             
## Amenities [/api/amenities]
Retrieve all the amenities
### api/amenities [GET]
+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

        {
              "data": [
               {
                      "id": "5afcd6c1-92db-47ef-89dc-67fe87b6cdae",
                      "name": "Air conditioning",
                      "slug": "air_conditioning",
                      "group": "general"
                    },
                    {
                      "id": "8662940e-587b-4659-ad09-983cac77a22f",
                      "name": "Bed linens",
                      "slug": "bed_linens",
                      "group": "general"
                    },
                    {
                      "id": "74768c2f-dbc6-4d50-943c-9440f1e53d7c",
                      "name": "Cable TV",
                      "slug": "cable_tv",
                      "group": "general"
                    },
                    {
                      "id": "ecc54c30-d46d-4c73-9e01-84f152ee7bf3",
                      "name": "Dryer",
                      "slug": "dryer",
                      "group": "general"
                    },
                    {
                      "id": "5f2ad8b0-0ca4-4d3e-964e-f1f90eb32344",
                      "name": "DVD \/ Blue Ray",
                      "slug": "dvd_blue_ray",
                      "group": "general"
                    },
                    {
                      "id": "be34f982-2b71-4403-872b-b8b4feafde6f",
                      "name": "Extra pillows and blankets",
                      "slug": "extra_pillows_and_blankets",
                      "group": "general"
                    },
                    {
                      "id": "6b1be73f-d551-41cb-be48-19dfba459309",
                      "name": "Firewood included",
                      "slug": "firewood_included",
                      "group": "general"
                    },
                    {
                      "id": "3820c6d1-8054-4808-b1cd-e2414b846ff3",
                      "name": "Hair dryer",
                      "slug": "hair_dryer",
                      "group": "general"
                    },
                    {
                      "id": "53838e65-48b0-456f-aead-aae61ac88cce",
                      "name": "Hangers in closets",
                      "slug": "hangers_in_closets",
                      "group": "general"
                    },
                    {
                      "id": "ffa8889b-e269-47f8-bf7e-12533c949090",
                      "name": "Heated floors",
                      "slug": "heated_floors",
                      "group": "general"
                    },
                    {
                      "id": "fc831efc-85f8-455b-b800-2bd033d29122",
                      "name": "Heating",
                      "slug": "heating",
                      "group": "general"
                    },
                    {
                      "id": "084ca42b-1473-41de-9da7-5aba6c162045",
                      "name": "Home essentials",
                      "slug": "home_essentials",
                      "group": "general"
                    },
                    {
                      "id": "106782d9-2911-4050-9d3b-b1f7ca7dd254",
                      "name": "Hot water",
                      "slug": "hot_water",
                      "group": "general"
                    },
                    {
                      "id": "ad75f152-9b01-4fd6-8331-46a8f300523b",
                      "name": "Indoor fireplace",
                      "slug": "indoor_fireplace",
                      "group": "general"
                    },
                    {
                      "id": "f279c089-be9d-492e-80a3-e254c5db7450",
                      "name": "Iron",
                      "slug": "iron",
                      "group": "general"
                    },
                    {
                      "id": "558a57e2-5cad-49f5-b554-f70cc6fd2353",
                      "name": "Kitchen",
                      "slug": "kitchen",
                      "group": "general"
                    },
                    {
                      "id": "2268f5bc-5a27-4a80-8c74-67957c7c0b40",
                      "name": "Laptop friendly workspace",
                      "slug": "laptop_friendly_workspace",
                      "group": "general"
                    },
                    {
                      "id": "66847f70-e9cb-4d5d-a78c-74797c5ee60b",
                      "name": "Potable water",
                      "slug": "potable_water",
                      "group": "general"
                    },
                    {
                      "id": "06248074-b020-434c-864a-e1246b5a9b32",
                      "name": "Shampoo & soap",
                      "slug": "shampoo_soap",
                      "group": "general"
                    },
                    {
                      "id": "b8bf4a0c-f63e-488d-a957-58297de2b473",
                      "name": "Toilet paper",
                      "slug": "toilet_paper",
                      "group": "general"
                    },
                    {
                      "id": "ded2a36d-1190-4e52-81cc-b1efede54eac",
                      "name": "Towels",
                      "slug": "towels",
                      "group": "general"
                    },
                    {
                      "id": "c64e03ea-6700-4322-80c3-bb529cc4932c",
                      "name": "TV",
                      "slug": "tv",
                      "group": "general"
                    },
                    {
                      "id": "aaafd785-8732-4319-a08b-055f5e662532",
                      "name": "Washer",
                      "slug": "washer",
                      "group": "general"
                    },
                    {
                      "id": "d27fffb0-f6a1-42c4-970c-795b1f0c831f",
                      "name": "Wireless Internet",
                      "slug": "wireless_internet",
                      "group": "general"
                    },
                    {
                      "id": "8d95fdc0-ab5f-4495-bb8a-8e4f7c162505",
                      "name": "Baby bath",
                      "slug": "baby_bath",
                      "group": "family features"
                    },
                    {
                      "id": "ad8f2aad-d1b6-46bc-819e-d1108783b2e0",
                      "name": "Baby monitor",
                      "slug": "baby_monitor",
                      "group": "family features"
                    },
                    {
                      "id": "04fd985b-4c60-4123-9498-80e6348c6eab",
                      "name": "Babysitter referrals",
                      "slug": "babysitter_referrals",
                      "group": "family features"
                    },
                    {
                      "id": "22111293-0148-4e2a-ac04-0d64a0c9fba5",
                      "name": "Changing tableBathtub",
                      "slug": "changing_tablebathtub",
                      "group": "family features"
                    },
                    {
                      "id": "122a52bd-00e4-4af3-9af3-202445114037",
                      "name": "Children’s books and toys",
                      "slug": "childrens_books_and_toys",
                      "group": "family features"
                    },
                    {
                      "id": "b69eb3f5-3491-42c8-b5dc-e90a85b2d867",
                      "name": "Children’s dinnerware",
                      "slug": "childrens_dinnerware",
                      "group": "family features"
                    },
                    {
                      "id": "da9ffa06-db29-43b1-8cca-2001df4bc2cc",
                      "name": "Crib",
                      "slug": "crib",
                      "group": "family features"
                    },
                    {
                      "id": "40886ef7-fa78-4dae-af6f-e926d09d1cf3",
                      "name": "Fireplace guards",
                      "slug": "fireplace_guards",
                      "group": "family features"
                    },
                    {
                      "id": "15fac940-99b9-4c89-aa99-4d92729021ec",
                      "name": "Foosball table",
                      "slug": "foosball_table",
                      "group": "family features"
                    },
                    {
                      "id": "356cf0a9-dc6c-46e1-aa27-de3951a438f3",
                      "name": "Game console",
                      "slug": "game_console",
                      "group": "family features"
                    },
                    {
                      "id": "cb530de7-d1b0-4362-b00f-a3192b2f06ec",
                      "name": "High chair",
                      "slug": "high_chair",
                      "group": "family features"
                    },
                    {
                      "id": "9a210ed7-ab2f-4f26-b74d-c1b1e67d977e",
                      "name": "Outlet covers",
                      "slug": "outlet_covers",
                      "group": "family features"
                    },
                    {
                      "id": "d8d78dcc-359b-41e5-bb90-b3257831aff0",
                      "name": "Pack ’n Play\/travel crib",
                      "slug": "pack_n_playtravel_crib",
                      "group": "family features"
                    },
                    {
                      "id": "645807b2-fec2-4eb6-817d-00f56ef6fc31",
                      "name": "Ping pong table",
                      "slug": "ping_pong_table",
                      "group": "family features"
                    },
                    {
                      "id": "2709f5fe-82da-402e-9f68-a91d84d1b9ae",
                      "name": "Pool table",
                      "slug": "pool_table",
                      "group": "family features"
                    },
                    {
                      "id": "0f6fd9ab-d0f3-455f-a007-6167c5005b5d",
                      "name": "Room-darkening shades",
                      "slug": "room_darkening_shades",
                      "group": "family features"
                    },
                    {
                      "id": "7c8e65ff-3319-44f1-a58c-f81378fe288a",
                      "name": "Stair gates",
                      "slug": "stair_gates",
                      "group": "family features"
                    },
                    {
                      "id": "f4eed9dd-8328-42e6-b064-2cd8e9701a13",
                      "name": "Table corner guards",
                      "slug": "table_corner_guards",
                      "group": "family features"
                    },
                    {
                      "id": "f06ffb79-f987-4266-af84-a1caf66ff0cc",
                      "name": "Window guards",
                      "slug": "window_guards",
                      "group": "family features"
                    },
                    {
                      "id": "2379ad45-a8b0-43f8-be2a-1e8c7ecac810",
                      "name": "Coffee maker",
                      "slug": "coffee_maker",
                      "group": "kitchen"
                    },
                    {
                      "id": "27dbee79-579d-4ed9-ad8e-1238f133b247",
                      "name": "Cooking basics",
                      "slug": "cooking_basics",
                      "group": "kitchen"
                    },
                    {
                      "id": "44f9f1ef-97eb-473c-8e69-e868a0c666e8",
                      "name": "Dishes and silverware",
                      "slug": "dishes_and_silverware",
                      "group": "kitchen"
                    },
                    {
                      "id": "9a21a8cf-f334-4656-9f0f-002642d6661a",
                      "name": "Dishwasher",
                      "slug": "dishwasher",
                      "group": "kitchen"
                    },
                    {
                      "id": "b48b67c2-30bc-48e2-a059-c0f610259c63",
                      "name": "Microwave",
                      "slug": "microwave",
                      "group": "kitchen"
                    },
                    {
                      "id": "8f2335ad-1298-423f-9990-eb5343032067",
                      "name": "Oven",
                      "slug": "oven",
                      "group": "kitchen"
                    },
                    {
                      "id": "725f1fd4-6ad9-4540-9d76-8fdbe17a2016",
                      "name": "Pots and pans",
                      "slug": "pots_and_pans",
                      "group": "kitchen"
                    },
                    {
                      "id": "7a1b04a9-999d-469f-b0e5-1f9a629917bb",
                      "name": "Refrigerator",
                      "slug": "refrigerator",
                      "group": "kitchen"
                    },
                    {
                      "id": "90b2b717-da40-4598-8e75-d36fa1d649d0",
                      "name": "Stove",
                      "slug": "stove",
                      "group": "kitchen"
                    },
                    {
                      "id": "463dc946-4c8c-4271-8f8f-717e80168302",
                      "name": "Access to water",
                      "slug": "access_to_water",
                      "group": "outdoor"
                    },
                    {
                      "id": "4fc180e4-de04-473e-953a-39a0aa4a79b7",
                      "name": "BBQ  Grill",
                      "slug": "bbq_grill",
                      "group": "outdoor"
                    },
                    {
                      "id": "288212d6-4e3c-4a32-ac6b-0717592bf335",
                      "name": "Beach chairs",
                      "slug": "beach_chairs",
                      "group": "outdoor"
                    },
                    {
                      "id": "f0168bc9-a17a-4e44-b9e2-f05f5abb3154",
                      "name": "Beachfront",
                      "slug": "beachfront",
                      "group": "outdoor"
                    },
                    {
                      "id": "2e5bf146-1cd1-4b4d-bde6-16620beb12dd",
                      "name": "By a river",
                      "slug": "by_a_river",
                      "group": "outdoor"
                    },
                    {
                      "id": "3e734f17-8480-4bf8-82b2-dbce3bfbb955",
                      "name": "Dock",
                      "slug": "dock",
                      "group": "outdoor"
                    },
                    {
                      "id": "31e0daaa-9820-4b79-a1e8-786d015ed016",
                      "name": "Fire pit",
                      "slug": "fire_pit",
                      "group": "outdoor"
                    },
                    {
                      "id": "2c121a1c-e983-47c1-87ff-e3c08325fdf8",
                      "name": "Garden or backyard",
                      "slug": "garden_or_backyard",
                      "group": "outdoor"
                    },
                    {
                      "id": "2ab27b0a-ae23-45be-9fa2-39e143ad7e19",
                      "name": "Hamak",
                      "slug": "hamak",
                      "group": "outdoor"
                    },
                    {
                      "id": "55d7f516-7d0c-45ea-84a4-70e51e514a1f",
                      "name": "Hot tub  Spa",
                      "slug": "hot_tub_spa",
                      "group": "outdoor"
                    },
                    {
                      "id": "77c4e005-67e0-4017-a440-97ec82fad564",
                      "name": "Lakefront",
                      "slug": "lakefront",
                      "group": "outdoor"
                    },
                    {
                      "id": "56013cbd-e3da-4375-b524-78a09079a551",
                      "name": "Life jackets",
                      "slug": "life_jackets",
                      "group": "outdoor"
                    },
                    {
                      "id": "5baae93a-a69b-4409-9d6a-6115a7a1e284",
                      "name": "Patio furniture",
                      "slug": "patio_furniture",
                      "group": "outdoor"
                    },
                    {
                      "id": "6dfff6fc-6e3c-4a80-bd97-2359844de7c0",
                      "name": "Patio or balcony",
                      "slug": "patio_or_balcony",
                      "group": "outdoor"
                    },
                    {
                      "id": "232baff9-baef-463c-ac09-902baa7e559e",
                      "name": "Pool",
                      "slug": "pool",
                      "group": "outdoor"
                    },
                    {
                      "id": "5106f5c4-e482-4745-b481-40bc12915b39",
                      "name": "Sandy beach",
                      "slug": "sandy_beach",
                      "group": "outdoor"
                    },
                    {
                      "id": "6e7d84ab-545b-4278-8ce6-e9b6d2afba94",
                      "name": "Sauna",
                      "slug": "sauna",
                      "group": "outdoor"
                    },
                    {
                      "id": "12c585e3-6959-4bde-900e-6176e0d96df4",
                      "name": "Ski in ski out",
                      "slug": "ski_in_ski_out",
                      "group": "outdoor"
                    },
                    {
                      "id": "eff43870-fa96-472b-94e8-846c36ac2db0",
                      "name": "Volleyball net",
                      "slug": "volleyball_net",
                      "group": "outdoor"
                    },
                    {
                      "id": "2eedc3d5-51a1-49e6-a659-7d8bca265ef3",
                      "name": "Alpine Skiing",
                      "slug": "alpine_skiing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "d3a81cba-fc19-4e38-952f-2d372a93f301",
                      "name": "ATV trail",
                      "slug": "atv_trail",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "05f154e4-2b30-415b-8755-629ff4a3d6f9",
                      "name": "Basketball",
                      "slug": "basketball",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "29b3abec-d325-4dbd-bbea-65b15cae6619",
                      "name": "Boating",
                      "slug": "boating",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "ce6639c1-90f0-4fdc-916d-6a8d1152b016",
                      "name": "Parasailing",
                      "slug": "parasailing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "7a9ec0b4-3382-403b-989b-6220ed330157",
                      "name": "Road biking",
                      "slug": "road_biking",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "a315fe7d-39ff-4ea7-bb5f-cbd4ab859d09",
                      "name": "Mountain Biking",
                      "slug": "mountain_biking",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "9e3aa8a7-faaa-49aa-933d-6e302632d55b",
                      "name": "Kayaking",
                      "slug": "kayaking",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "9eb15b3c-5c7b-470b-9d92-e153478e9a1a",
                      "name": "Jet skiing",
                      "slug": "jet_skiing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "888cf70b-2ffd-4c4d-aec7-5d323e62746e",
                      "name": "Ice Climbing",
                      "slug": "ice_climbing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "5d0e54fc-e7da-4e6e-8859-c1f64e7ba491",
                      "name": "Horseback riding",
                      "slug": "horseback_riding",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "392c88bc-bb90-4032-992d-3e0bd51cb1f6",
                      "name": "Hockey",
                      "slug": "hockey",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "d132eb4a-3fcf-4ccb-8f45-34e6538f6202",
                      "name": "Hiking",
                      "slug": "hiking",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "c57fb3c8-783b-41c9-992e-4f8cc55c0e92",
                      "name": "Golf",
                      "slug": "golf",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "d19c9dfc-d8be-42cc-9734-ffac75e31813",
                      "name": "Fishing",
                      "slug": "fishing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "87a25991-dce5-43b6-b63b-430435e6877a",
                      "name": "Deepsea fishing",
                      "slug": "deepsea_fishing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "9e053dea-9f77-44ab-88ad-423a390dcb47",
                      "name": "Cross-country skiing",
                      "slug": "cross_country_skiing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "e8b05015-57f4-42d3-9f1d-60e4090af93f",
                      "name": "Caving",
                      "slug": "caving",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "7e4a4521-6895-4eac-a8be-4c46df32ee8f",
                      "name": "Canoeing",
                      "slug": "canoeing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "4aa23158-2962-4d34-bfd4-7d70f0fa2aea",
                      "name": "Rock Climbing",
                      "slug": "rock_climbing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "d3aeda4e-2e76-4d35-b53b-c2c2ded9eec9",
                      "name": "Rollerblading",
                      "slug": "rollerblading",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "96d417d8-a5fb-4a67-b0c7-4b0ba924d7ed",
                      "name": "Running",
                      "slug": "running",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "ea128561-9d41-49f0-8b0a-a482955cdbca",
                      "name": "Sailing",
                      "slug": "sailing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "162a9529-642f-4d13-bb0c-31d3cb4369a5",
                      "name": "Scuba diving",
                      "slug": "scuba_diving",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "76b4f1af-3cf5-485c-bd11-c2b279140780",
                      "name": "Skating",
                      "slug": "skating",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "7dc997b3-4e0e-41ac-9ab8-a271ba95091e",
                      "name": "Skydiving",
                      "slug": "skydiving",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "4a3ffc24-a555-408a-a0b0-8a773fc4550a",
                      "name": "Snorkeling",
                      "slug": "snorkeling",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "a4700bd2-97aa-4084-a6e4-721ced617e23",
                      "name": "Snowboarding",
                      "slug": "snowboarding",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "191d4190-5eaa-4c45-8f41-2e2f9ea65159",
                      "name": "Snowmobile trail",
                      "slug": "snowmobile_trail",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "e64bc386-36e8-4280-a653-0b5afd74847e",
                      "name": "Snowshoeing",
                      "slug": "snowshoeing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "e35eb066-b962-4502-ac7b-9bada241ba03",
                      "name": "Swimming",
                      "slug": "swimming",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "44c7e034-c2de-474e-a23c-a2fb4b2b228d",
                      "name": "Windsurfing",
                      "slug": "windsurfing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "a4d77fb6-fc9e-4ddf-aabc-3aaf65898b3c",
                      "name": "Tennis",
                      "slug": "tennis",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "eefd0343-49bb-4681-a262-68c4384929d5",
                      "name": "Tree Climbing",
                      "slug": "tree_climbing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "f48c5de2-9f6a-4a38-b874-f8db4640ed37",
                      "name": "Volleyball",
                      "slug": "volleyball",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "e196f437-b848-4d7f-85cf-8d6b0a525830",
                      "name": "Water skiing",
                      "slug": "water_skiing",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "5c953bb0-675a-4cf6-b629-a37ce6b1e44e",
                      "name": "Water sliding",
                      "slug": "water_sliding",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "2b751be9-3051-4a92-ae22-d5065c82a953",
                      "name": "Whitewater rafting",
                      "slug": "whitewater_rafting",
                      "group": "sports & adventures nearby"
                    },
                    {
                      "id": "ca15dc07-d360-4905-a671-12896f868632",
                      "name": "Elevator in the building",
                      "slug": "elevator_in_the_building",
                      "group": "accessibility"
                    },
                    {
                      "id": "620bc931-9feb-41f2-85d8-7eff13e147fe",
                      "name": "Private entrance",
                      "slug": "private_entrance",
                      "group": "accessibility"
                    },
                    {
                      "id": "9149e92b-6480-482e-a071-1b57de4bc39d",
                      "name": "Single level home",
                      "slug": "single_level_home",
                      "group": "accessibility"
                    },
                    {
                      "id": "ddd88a8c-09e8-4364-9556-80602c6dfd8f",
                      "name": "Wheelchair accessible",
                      "slug": "wheelchair_accessible",
                      "group": "accessibility"
                    },
                    {
                      "id": "ce4e9511-6a18-40ad-bf62-2042a87c197d",
                      "name": "Breakfast included",
                      "slug": "breakfast_included",
                      "group": "services"
                    },
                    {
                      "id": "f9a49e78-46d6-41fd-bca9-1a6a5a6868b4",
                      "name": "EV charger",
                      "slug": "ev_charger",
                      "group": "services"
                    },
                    {
                      "id": "3e3d9b34-e91c-420f-a2aa-b3a349037fab",
                      "name": "Free gym  Fitness centre",
                      "slug": "free_gym_fitness_centre",
                      "group": "services"
                    },
                    {
                      "id": "7c2f5f05-2fb5-44a7-a8a0-e315df061dc4",
                      "name": "Free parking on premises",
                      "slug": "free_parking_on_premises",
                      "group": "services"
                    },
                    {
                      "id": "62bc702c-2586-4b6a-8007-39306d3ec95e",
                      "name": "Guided tours",
                      "slug": "guided_tours",
                      "group": "services"
                    },
                    {
                      "id": "5dd54af9-d493-4816-afe6-3543d23727b3",
                      "name": "Maid service included",
                      "slug": "maid_service_included",
                      "group": "services"
                    },
                    {
                      "id": "f2f9a3ad-0165-489c-8ae1-34d6ca959165",
                      "name": "Restaurant on site",
                      "slug": "restaurant_on_site",
                      "group": "services"
                    },
                    {
                      "id": "b65df0fd-a484-4c6c-b2ac-58708b2abe4d",
                      "name": "Spa services",
                      "slug": "spa_services",
                      "group": "services"
                    },
                    {
                      "id": "b88fef14-88bb-45e6-bdae-9304b85291db",
                      "name": "Tea & coffee included",
                      "slug": "tea_coffee_included",
                      "group": "services"
                    },
                    {
                      "id": "2f9f8c94-0247-47be-8c27-baf7ba2c94ee",
                      "name": "Art show",
                      "slug": "art_show",
                      "group": "suitable for events"
                    },
                    {
                      "id": "9017c80e-2263-4061-b939-cf117ac7eeae",
                      "name": "Bachelor(ette) party",
                      "slug": "bachelorette_party",
                      "group": "suitable for events"
                    },
                    {
                      "id": "5b8cb72d-7768-4bc2-bf5d-b3dfc3fa9304",
                      "name": "Birthday party",
                      "slug": "birthday_party",
                      "group": "suitable for events"
                    },
                    {
                      "id": "689d1de3-e688-4e72-be8e-3f28e7a360ef",
                      "name": "Conference",
                      "slug": "conference",
                      "group": "suitable for events"
                    },
                    {
                      "id": "f45b4b36-548c-4dec-9547-df80d945cea3",
                      "name": "Corporate meeting",
                      "slug": "corporate_meeting",
                      "group": "suitable for events"
                    },
                    {
                      "id": "3601de78-1db6-4e4d-b583-1c8ae5603da7",
                      "name": "Executive retreat",
                      "slug": "executive_retreat",
                      "group": "suitable for events"
                    },
                    {
                      "id": "f0801fbe-92fd-4295-971c-a77127a4d2c7",
                      "name": "Friends & Family meeting",
                      "slug": "friends_family_meeting",
                      "group": "suitable for events"
                    },
                    {
                      "id": "d30def26-1089-450f-81e6-298240789859",
                      "name": "Photo & Film Shoot",
                      "slug": "photo_film_shoot",
                      "group": "suitable for events"
                    },
                    {
                      "id": "7e0c7c67-8341-4ffa-af88-4252993732f7",
                      "name": "Product launch",
                      "slug": "product_launch",
                      "group": "suitable for events"
                    },
                    {
                      "id": "f29fb86a-4438-43a1-ba77-e11b4db8039e",
                      "name": "Seminar & Networking",
                      "slug": "seminar_networking",
                      "group": "suitable for events"
                    },
                    {
                      "id": "34be44f1-2743-497b-aa06-731cd22f2bb4",
                      "name": "Sport team training",
                      "slug": "sport_team_training",
                      "group": "suitable for events"
                    },
                    {
                      "id": "fd49b63d-5a04-44de-aecf-35bb166c0af9",
                      "name": "Wedding",
                      "slug": "wedding",
                      "group": "suitable for events"
                    }
                  ]
            }       
  
+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
        

## Get property amenities [/api/v1/properties/{uuid}/amenities GET]

Retrieve amenities associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property
    


### api/v1/properties/{uuid}/amenities [GET]
+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
               "data": {
                            "access_to_water": false,
                            "air_conditioning": false,
                            "pets_are_welcome": false,
                            "alpine_skiing": false,
                            "art_show": false,
                            "atv_trail": false,
                            "baby_bath": false,
                            "baby_monitor": false,
                            "babysitter_referrals": false,
                            "bachelorette_party": false,
                            "basketball": false,
                            "bbq_grill": false,
                            "beach_chairs": false,
                            "beachfront": false,
                            "bed_linens": false,
                            "birthday_party": false,
                            "boating": false,
                            "breakfast_included": false,
                            "by_a_river": false,
                            "cable_tv": false,
                            "canoeing": false,
                            "changing_tablebathtub": false,
                            "caving": false,
                            "cooking_basics": false,
                            "corporate_meeting": false,
                            "conference": false,
                            "coffee_maker": false,
                            "childrens_dinnerware": false,
                            "childrens_books_and_toys": false,
                            "crib": false,
                            "cross_country_skiing": false,
                            "deepsea_fishing": false,
                            "dishes_and_silverware": false,
                            "dishwasher": false,
                            "dock": false,
                            "dryer": false,
                            "dvd_blue_ray": false,
                            "ev_charger": false,
                            "executive_retreat": false,
                            "extra_pillows_and_blankets": false,
                            "fire_pit": false,
                            "fireplace_guards": false,
                            "firewood_included": false,
                            "free_gym_fitness_centre": false,
                            "free_parking_on_premises": false,
                            "friends_family_meeting": false,
                            "game_console": false,
                            "garden_or_backyard": false,
                            "golf": false,
                            "guided_tours": false,
                            "hair_dryer": false,
                            "hamak": false,
                            "hangers_in_closets": false,
                            "heated_floors": false,
                            "heating": false,
                            "high_chair": false,
                            "hiking": false,
                            "hockey": false,
                            "home_essentials": false,
                            "horseback_riding": false,
                            "foosball_table": false,
                            "fishing": false,
                            "hot_tub_spa": false,
                            "hot_water": false,
                            "ice_climbing": false,
                            "indoor_fireplace": false,
                            "iron": false,
                            "jet_skiing": false,
                            "kayaking": false,
                            "kitchen": false,
                            "lakefront": false,
                            "laptop_friendly_workspace": false,
                            "life_jackets": false,
                            "maid_service_included": false,
                            "microwave": false,
                            "mountain_biking": false,
                            "outlet_covers": false,
                            "oven": false,
                            "pack_n_playtravel_crib": false,
                            "parasailing": false,
                            "patio_furniture": false,
                            "patio_or_balcony": false,
                            "photo_film_shoot": false,
                            "ping_pong_table": false,
                            "pool": false,
                            "pool_table": false,
                            "pots_and_pans": false,
                            "private_entrance": false,
                            "product_launch": false,
                            "refrigerator": false,
                            "road_biking": false,
                            "rock_climbing": false,
                            "rollerblading": false,
                            "room_darkening_shades": false,
                            "running": false,
                            "sailing": false,
                            "sandy_beach": false,
                            "sauna": false,
                            "scuba_diving": false,
                            "shampoo_soap": false,
                            "single_level_home": false,
                            "skating": false,
                            "ski_in_ski_out": false,
                            "skydiving": false,
                            "snorkeling": false,
                            "snowboarding": false,
                            "snowmobile_trail": false,
                            "snowshoeing": false,
                            "spa_services": false,
                            "sport_team_training": false,
                            "stair_gates": false,
                            "stove": false,
                            "swimming": false,
                            "table_corner_guards": false,
                            "tea_coffee_included": false,
                            "tennis": false,
                            "toilet_paper": false,
                            "towels": false,
                            "tree_climbing": false,
                            "tv": false,
                            "volleyball": false,
                            "volleyball_net": false,
                            "washer": false,
                            "water_skiing": false,
                            "water_sliding": false,
                            "wedding": false,
                            "wheelchair_accessible": false,
                            "whitewater_rafting": false,
                            "window_guards": false,
                            "windsurfing": false,
                            "wireless_internet": false
                          }
            }
            


+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
## Set property amenities [/api/v1/properties/{uuid}/amenities PUT]
Edit amenities associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property
    

### api/v1/properties/{uuid}/amenities [PUT]

+ Request (application/json)

    

    + Amenities
    + `access_to_water` required. boolean.
    + `air_conditioning` required. boolean.
    + `pets_are_welcome` required. boolean.
    + `alpine_skiing` required. boolean.
    + `art_show` required. boolean.
    + `atv_trail` required. boolean.
    + `baby_bath` required. boolean.
    + `baby_monitor` required. boolean.
    + `babysitter_referrals` required. boolean.
    + `bachelorette_party` required. boolean.
    + `basketball` required. boolean.
    + `bbq_grill` required. boolean.
    + `beach_chairs` required. boolean.
    + `beachfront` required. boolean.
    + `bed_linens` required. boolean.
    + `birthday_party` required. boolean.
    + `boating` required. boolean.
    + `breakfast_included` required. boolean.
    + `by_a_river` required. boolean.
    + `cable_tv` required. boolean.
    + `canoeing` required. boolean.
    + `changing_tablebathtub` required. boolean.
    + `caving` required. boolean.
    + `cooking_basics` required. boolean.
    + `corporate_meeting` required. boolean.
    + `conference` required. boolean.
    + `coffee_maker` required. boolean.
    + `childrens_dinnerware` required. boolean.
    + `childrens_books_and_toys` required. boolean.
    + `crib` required. boolean.
    + `cross_country_skiing` required. boolean.
    + `deepsea_fishing` required. boolean.
    + `dishes_and_silverware` required. boolean.
    + `dishwasher` required. boolean.
    + `dock` required. boolean.
    + `dryer` required. boolean.
    + `dvd_blue_ray` required. boolean.
    + `ev_charger` required. boolean.
    + `executive_retreat` required. boolean.
    + `extra_pillows_and_blankets` required. boolean.
    + `fire_pit` required. boolean.
    + `fireplace_guards` required. boolean.
    + `firewood_included` required. boolean.
    + `free_gym_fitness_centre` required. boolean.
    + `free_parking_on_premises` required. boolean.
    + `friends_family_meeting` required. boolean.
    + `game_console` required. boolean.
    + `garden_or_backyard` required. boolean.
    + `golf` required. boolean.
    + `guided_tours` required. boolean.
    + `hair_dryer` required. boolean.
    + `hamak` required. boolean.
    + `hangers_in_closets` required. boolean.
    + `heated_floors` required. boolean.
    + `heating` required. boolean.
    + `high_chair` required. boolean.
    + `hiking` required. boolean.
    + `hockey` required. boolean.
    + `home_essentials` required. boolean.
    + `horseback_riding` required. boolean.
    + `foosball_table` required. boolean.
    + `fishing` required. boolean.
    + `hot_tub_spa` required. boolean.
    + `hot_water` required. boolean.
    + `ice_climbing` required. boolean.
    + `indoor_fireplace` required. boolean.
    + `iron` required. boolean.
    + `jet_skiing` required. boolean.
    + `kayaking` required. boolean.
    + `kitchen` required. boolean.
    + `lakefront` required. boolean.
    + `laptop_friendly_workspace` required. boolean.
    + `life_jackets` required. boolean.
    + `maid_service_included` required. boolean.
    + `microwave` required. boolean.
    + `mountain_biking` required. boolean.
    + `outlet_covers` required. boolean.
    + `oven` required. boolean.
    + `pack_n_playtravel_crib` required. boolean.
    + `parasailing` required. boolean.
    + `patio_furniture` required. boolean.
    + `patio_or_balcony` required. boolean.
    + `photo_film_shoot` required. boolean.
    + `ping_pong_table` required. boolean.
    + `pool` required. boolean.
    + `pool_table` required. boolean.
    + `pots_and_pans` required. boolean.
    + `private_entrance` required. boolean.
    + `product_launch` required. boolean.
    + `refrigerator` required. boolean.
    + `road_biking` required. boolean.
    + `rock_climbing` required. boolean.
    + `rollerblading` required. boolean.
    + `room_darkening_shades` required. boolean.
    + `running` required. boolean.
    + `sailing` required. boolean.
    + `sandy_beach` required. boolean.
    + `sauna` required. boolean.
    + `scuba_diving` required. boolean.
    + `shampoo_soap` required. boolean.
    + `single_level_home` required. boolean.
    + `skating` required. boolean.
    + `ski_in_ski_out` required. boolean.
    + `skydiving` required. boolean.
    + `snorkeling` required. boolean.
    + `snowboarding` required. boolean.
    + `snowmobile_trail` required. boolean.
    + `snowshoeing` required. boolean.
    + `spa_services` required. boolean.
    + `sport_team_training` required. boolean.
    + `stair_gates` required. boolean.
    + `stove` required. boolean.
    + `swimming` required. boolean.
    + `table_corner_guards` required. boolean.
    + `tea_coffee_included` required. boolean.
    + `tennis` required. boolean.
    + `toilet_paper` required. boolean.
    + `towels` required. boolean.
    + `tree_climbing` required. boolean.
    + `tv` required. boolean.
    + `volleyball` required. boolean.
    + `volleyball_net` required. boolean.
    + `washer` required. boolean.
    + `water_skiing` required. boolean.
    + `water_sliding` required. boolean.
    + `wedding` required. boolean.
    + `wheelchair_accessible` required. boolean.
    + `whitewater_rafting` required. boolean.
    + `window_guards` required. boolean.
    + `windsurfing` required. boolean.
    + `wireless_internet` required. boolean. 
    
   

    + Body

            {
              "api_token": "",
              "amenities" : {
                       "access_to_water": true,
                        "air_conditioning": true,
                        "pets_are_welcome": false,
                        "alpine_skiing": false,
                        "art_show": false,
                        "atv_trail": false,
                        "baby_bath": false,
                        "baby_monitor": false,
                        "babysitter_referrals": false,
                        "bachelorette_party": false,
                        "basketball": false,
                        "bbq_grill": false,
                        "beach_chairs": false,
                        "beachfront": false,
                        "bed_linens": false,
                        "birthday_party": false,
                        "boating": false,
                        "breakfast_included": false,
                        "by_a_river": false,
                        "cable_tv": false,
                        "canoeing": false,
                        "changing_tablebathtub": false,
                        "caving": false,
                        "cooking_basics": false,
                        "corporate_meeting": false,
                        "conference": false,
                        "coffee_maker": false,
                        "childrens_dinnerware": false,
                        "childrens_books_and_toys": false,
                        "crib": false,
                        "cross_country_skiing": false,
                        "deepsea_fishing": false,
                        "dishes_and_silverware": false,
                        "dishwasher": false,
                        "dock": false,
                        "dryer": false,
                        "dvd_blue_ray": false,
                        "ev_charger": false,
                        "executive_retreat": false,
                        "extra_pillows_and_blankets": false,
                        "fire_pit": false,
                        "fireplace_guards": false,
                        "firewood_included": false,
                        "free_gym_fitness_centre": false,
                        "free_parking_on_premises": false,
                        "friends_family_meeting": false,
                        "game_console": false,
                        "garden_or_backyard": false,
                        "golf": false,
                        "guided_tours": false,
                        "hair_dryer": false,
                        "hamak": false,
                        "hangers_in_closets": false,
                        "heated_floors": false,
                        "heating": false,
                        "high_chair": false,
                        "hiking": false,
                        "hockey": false,
                        "home_essentials": false,
                        "horseback_riding": false,
                        "foosball_table": false,
                        "fishing": false,
                        "hot_tub_spa": false,
                        "hot_water": false,
                        "ice_climbing": false,
                        "indoor_fireplace": false,
                        "iron": false,
                        "jet_skiing": false,
                        "kayaking": false,
                        "kitchen": false,
                        "lakefront": false,
                        "laptop_friendly_workspace": false,
                        "life_jackets": false,
                        "maid_service_included": false,
                        "microwave": false,
                        "mountain_biking": false,
                        "outlet_covers": false,
                        "oven": false,
                        "pack_n_playtravel_crib": false,
                        "parasailing": false,
                        "patio_furniture": false,
                        "patio_or_balcony": false,
                        "photo_film_shoot": false,
                        "ping_pong_table": false,
                        "pool": false,
                        "pool_table": false,
                        "pots_and_pans": false,
                        "private_entrance": false,
                        "product_launch": false,
                        "refrigerator": false,
                        "road_biking": false,
                        "rock_climbing": false,
                        "rollerblading": false,
                        "room_darkening_shades": false,
                        "running": false,
                        "sailing": false,
                        "sandy_beach": false,
                        "sauna": false,
                        "scuba_diving": false,
                        "shampoo_soap": false,
                        "single_level_home": false,
                        "skating": false,
                        "ski_in_ski_out": false,
                        "skydiving": false,
                        "snorkeling": false,
                        "snowboarding": false,
                        "snowmobile_trail": false,
                        "snowshoeing": false,
                        "spa_services": false,
                        "sport_team_training": false,
                        "stair_gates": false,
                        "stove": false,
                        "swimming": false,
                        "table_corner_guards": false,
                        "tea_coffee_included": false,
                        "tennis": false,
                        "toilet_paper": false,
                        "towels": false,
                        "tree_climbing": false,
                        "tv": false,
                        "volleyball": false,
                        "volleyball_net": false,
                        "washer": false,
                        "water_skiing": false,
                        "water_sliding": false,
                        "wedding": false,
                        "wheelchair_accessible": false,
                        "whitewater_rafting": false,
                        "window_guards": false,
                        "windsurfing": false,
                        "wireless_internet": true                
                            }
            }

+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                       "access_to_water": true,
                        "air_conditioning": true,
                        "pets_are_welcome": false,
                        "alpine_skiing": false,
                        "art_show": false,
                        "atv_trail": false,
                        "baby_bath": false,
                        "baby_monitor": false,
                        "babysitter_referrals": false,
                        "bachelorette_party": false,
                        "basketball": false,
                        "bbq_grill": false,
                        "beach_chairs": false,
                        "beachfront": false,
                        "bed_linens": false,
                        "birthday_party": false,
                        "boating": false,
                        "breakfast_included": false,
                        "by_a_river": false,
                        "cable_tv": false,
                        "canoeing": false,
                        "changing_tablebathtub": false,
                        "caving": false,
                        "cooking_basics": false,
                        "corporate_meeting": false,
                        "conference": false,
                        "coffee_maker": false,
                        "childrens_dinnerware": false,
                        "childrens_books_and_toys": false,
                        "crib": false,
                        "cross_country_skiing": false,
                        "deepsea_fishing": false,
                        "dishes_and_silverware": false,
                        "dishwasher": false,
                        "dock": false,
                        "dryer": false,
                        "dvd_blue_ray": false,
                        "ev_charger": false,
                        "executive_retreat": false,
                        "extra_pillows_and_blankets": false,
                        "fire_pit": false,
                        "fireplace_guards": false,
                        "firewood_included": false,
                        "free_gym_fitness_centre": false,
                        "free_parking_on_premises": false,
                        "friends_family_meeting": false,
                        "game_console": false,
                        "garden_or_backyard": false,
                        "golf": false,
                        "guided_tours": false,
                        "hair_dryer": false,
                        "hamak": false,
                        "hangers_in_closets": false,
                        "heated_floors": false,
                        "heating": false,
                        "high_chair": false,
                        "hiking": false,
                        "hockey": false,
                        "home_essentials": false,
                        "horseback_riding": false,
                        "foosball_table": false,
                        "fishing": false,
                        "hot_tub_spa": false,
                        "hot_water": false,
                        "ice_climbing": false,
                        "indoor_fireplace": false,
                        "iron": false,
                        "jet_skiing": false,
                        "kayaking": false,
                        "kitchen": false,
                        "lakefront": false,
                        "laptop_friendly_workspace": false,
                        "life_jackets": false,
                        "maid_service_included": false,
                        "microwave": false,
                        "mountain_biking": false,
                        "outlet_covers": false,
                        "oven": false,
                        "pack_n_playtravel_crib": false,
                        "parasailing": false,
                        "patio_furniture": false,
                        "patio_or_balcony": false,
                        "photo_film_shoot": false,
                        "ping_pong_table": false,
                        "pool": false,
                        "pool_table": false,
                        "pots_and_pans": false,
                        "private_entrance": false,
                        "product_launch": false,
                        "refrigerator": false,
                        "road_biking": false,
                        "rock_climbing": false,
                        "rollerblading": false,
                        "room_darkening_shades": false,
                        "running": false,
                        "sailing": false,
                        "sandy_beach": false,
                        "sauna": false,
                        "scuba_diving": false,
                        "shampoo_soap": false,
                        "single_level_home": false,
                        "skating": false,
                        "ski_in_ski_out": false,
                        "skydiving": false,
                        "snorkeling": false,
                        "snowboarding": false,
                        "snowmobile_trail": false,
                        "snowshoeing": false,
                        "spa_services": false,
                        "sport_team_training": false,
                        "stair_gates": false,
                        "stove": false,
                        "swimming": false,
                        "table_corner_guards": false,
                        "tea_coffee_included": false,
                        "tennis": false,
                        "toilet_paper": false,
                        "towels": false,
                        "tree_climbing": false,
                        "tv": false,
                        "volleyball": false,
                        "volleyball_net": false,
                        "washer": false,
                        "water_skiing": false,
                        "water_sliding": false,
                        "wedding": false,
                        "wheelchair_accessible": false,
                        "whitewater_rafting": false,
                        "window_guards": false,
                        "windsurfing": false,
                        "wireless_internet": true
                        }
            }
            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }


+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "amenities": [
                      "The amenities field is required."
                    ],
                    "amenities.access_to_water": [
                      "The amenities.access to water field is required."
                    ],
                    "amenities.air_conditioning": [
                      "The amenities.air conditioning field is required."
                    ],
                    "amenities.pets_are_welcome": [
                      "The amenities.pets are welcome field is required."
                    ],
                    "amenities.alpine_skiing": [
                      "The amenities.alpine skiing field is required."
                    ],
                    "amenities.art_show": [
                      "The amenities.art show field is required."
                    ],
                    "amenities.atv_trail": [
                      "The amenities.atv trail field is required."
                    ],
                    "amenities.baby_bath": [
                      "The amenities.baby bath field is required."
                    ],
                    "amenities.baby_monitor": [
                      "The amenities.baby monitor field is required."
                    ],
                    "amenities.babysitter_referrals": [
                      "The amenities.babysitter referrals field is required."
                    ],
                    "amenities.bachelorette_party": [
                      "The amenities.bachelorette party field is required."
                    ],
                    "amenities.basketball": [
                      "The amenities.basketball field is required."
                    ],
                    "amenities.bbq_grill": [
                      "The amenities.bbq grill field is required."
                    ],
                    "amenities.beach_chairs": [
                      "The amenities.beach chairs field is required."
                    ],
                    "amenities.beachfront": [
                      "The amenities.beachfront field is required."
                    ],
                    "amenities.bed_linens": [
                      "The amenities.bed linens field is required."
                    ],
                    "amenities.birthday_party": [
                      "The amenities.birthday party field is required."
                    ],
                    "amenities.boating": [
                      "The amenities.boating field is required."
                    ],
                    "amenities.breakfast_included": [
                      "The amenities.breakfast included field is required."
                    ],
                    "amenities.by_a_river": [
                      "The amenities.by a river field is required."
                    ],
                    "amenities.cable_tv": [
                      "The amenities.cable tv field is required."
                    ],
                    "amenities.canoeing": [
                      "The amenities.canoeing field is required."
                    ],
                    "amenities.changing_tablebathtub": [
                      "The amenities.changing tablebathtub field is required."
                    ],
                    "amenities.caving": [
                      "The amenities.caving field is required."
                    ],
                    "amenities.cooking_basics": [
                      "The amenities.cooking basics field is required."
                    ],
                    "amenities.corporate_meeting": [
                      "The amenities.corporate meeting field is required."
                    ],
                    "amenities.conference": [
                      "The amenities.conference field is required."
                    ],
                    "amenities.coffee_maker": [
                      "The amenities.coffee maker field is required."
                    ],
                    "amenities.childrens_dinnerware": [
                      "The amenities.childrens dinnerware field is required."
                    ],
                    "amenities.childrens_books_and_toys": [
                      "The amenities.childrens books and toys field is required."
                    ],
                    "amenities.crib": [
                      "The amenities.crib field is required."
                    ],
                    "amenities.cross_country_skiing": [
                      "The amenities.cross country skiing field is required."
                    ],
                    "amenities.deepsea_fishing": [
                      "The amenities.deepsea fishing field is required."
                    ],
                    "amenities.dishes_and_silverware": [
                      "The amenities.dishes and silverware field is required."
                    ],
                    "amenities.dishwasher": [
                      "The amenities.dishwasher field is required."
                    ],
                    "amenities.dock": [
                      "The amenities.dock field is required."
                    ],
                    "amenities.dryer": [
                      "The amenities.dryer field is required."
                    ],
                    "amenities.dvd_blue_ray": [
                      "The amenities.dvd blue ray field is required."
                    ],
                    "amenities.ev_charger": [
                      "The amenities.ev charger field is required."
                    ],
                    "amenities.executive_retreat": [
                      "The amenities.executive retreat field is required."
                    ],
                    "amenities.extra_pillows_and_blankets": [
                      "The amenities.extra pillows and blankets field is required."
                    ],
                    "amenities.fire_pit": [
                      "The amenities.fire pit field is required."
                    ],
                    "amenities.fireplace_guards": [
                      "The amenities.fireplace guards field is required."
                    ],
                    "amenities.firewood_included": [
                      "The amenities.firewood included field is required."
                    ],
                    "amenities.free_gym_fitness_centre": [
                      "The amenities.free gym fitness centre field is required."
                    ],
                    "amenities.free_parking_on_premises": [
                      "The amenities.free parking on premises field is required."
                    ],
                    "amenities.friends_family_meeting": [
                      "The amenities.friends family meeting field is required."
                    ],
                    "amenities.game_console": [
                      "The amenities.game console field is required."
                    ],
                    "amenities.garden_or_backyard": [
                      "The amenities.garden or backyard field is required."
                    ],
                    "amenities.golf": [
                      "The amenities.golf field is required."
                    ],
                    "amenities.guided_tours": [
                      "The amenities.guided tours field is required."
                    ],
                    "amenities.hair_dryer": [
                      "The amenities.hair dryer field is required."
                    ],
                    "amenities.hamak": [
                      "The amenities.hamak field is required."
                    ],
                    "amenities.hangers_in_closets": [
                      "The amenities.hangers in closets field is required."
                    ],
                    "amenities.heated_floors": [
                      "The amenities.heated floors field is required."
                    ],
                    "amenities.heating": [
                      "The amenities.heating field is required."
                    ],
                    "amenities.high_chair": [
                      "The amenities.high chair field is required."
                    ],
                    "amenities.hiking": [
                      "The amenities.hiking field is required."
                    ],
                    "amenities.hockey": [
                      "The amenities.hockey field is required."
                    ],
                    "amenities.home_essentials": [
                      "The amenities.home essentials field is required."
                    ],
                    "amenities.horseback_riding": [
                      "The amenities.horseback riding field is required."
                    ],
                    "amenities.foosball_table": [
                      "The amenities.foosball table field is required."
                    ],
                    "amenities.fishing": [
                      "The amenities.fishing field is required."
                    ],
                    "amenities.hot_tub_spa": [
                      "The amenities.hot tub spa field is required."
                    ],
                    "amenities.hot_water": [
                      "The amenities.hot water field is required."
                    ],
                    "amenities.ice_climbing": [
                      "The amenities.ice climbing field is required."
                    ],
                    "amenities.indoor_fireplace": [
                      "The amenities.indoor fireplace field is required."
                    ],
                    "amenities.iron": [
                      "The amenities.iron field is required."
                    ],
                    "amenities.jet_skiing": [
                      "The amenities.jet skiing field is required."
                    ],
                    "amenities.kayaking": [
                      "The amenities.kayaking field is required."
                    ],
                    "amenities.kitchen": [
                      "The amenities.kitchen field is required."
                    ],
                    "amenities.lakefront": [
                      "The amenities.lakefront field is required."
                    ],
                    "amenities.laptop_friendly_workspace": [
                      "The amenities.laptop friendly workspace field is required."
                    ],
                    "amenities.life_jackets": [
                      "The amenities.life jackets field is required."
                    ],
                    "amenities.maid_service_included": [
                      "The amenities.maid service included field is required."
                    ],
                    "amenities.microwave": [
                      "The amenities.microwave field is required."
                    ],
                    "amenities.mountain_biking": [
                      "The amenities.mountain biking field is required."
                    ],
                    "amenities.outlet_covers": [
                      "The amenities.outlet covers field is required."
                    ],
                    "amenities.oven": [
                      "The amenities.oven field is required."
                    ],
                    "amenities.pack_n_playtravel_crib": [
                      "The amenities.pack n playtravel crib field is required."
                    ],
                    "amenities.parasailing": [
                      "The amenities.parasailing field is required."
                    ],
                    "amenities.patio_furniture": [
                      "The amenities.patio furniture field is required."
                    ],
                    "amenities.patio_or_balcony": [
                      "The amenities.patio or balcony field is required."
                    ],
                    "amenities.photo_film_shoot": [
                      "The amenities.photo film shoot field is required."
                    ],
                    "amenities.ping_pong_table": [
                      "The amenities.ping pong table field is required."
                    ],
                    "amenities.pool": [
                      "The amenities.pool field is required."
                    ],
                    "amenities.pool_table": [
                      "The amenities.pool table field is required."
                    ],
                    "amenities.pots_and_pans": [
                      "The amenities.pots and pans field is required."
                    ],
                    "amenities.private_entrance": [
                      "The amenities.private entrance field is required."
                    ],
                    "amenities.product_launch": [
                      "The amenities.product launch field is required."
                    ],
                    "amenities.refrigerator": [
                      "The amenities.refrigerator field is required."
                    ],
                    "amenities.road_biking": [
                      "The amenities.road biking field is required."
                    ],
                    "amenities.rock_climbing": [
                      "The amenities.rock climbing field is required."
                    ],
                    "amenities.rollerblading": [
                      "The amenities.rollerblading field is required."
                    ],
                    "amenities.room_darkening_shades": [
                      "The amenities.room darkening shades field is required."
                    ],
                    "amenities.running": [
                      "The amenities.running field is required."
                    ],
                    "amenities.sailing": [
                      "The amenities.sailing field is required."
                    ],
                    "amenities.sandy_beach": [
                      "The amenities.sandy beach field is required."
                    ],
                    "amenities.sauna": [
                      "The amenities.sauna field is required."
                    ],
                    "amenities.scuba_diving": [
                      "The amenities.scuba diving field is required."
                    ],
                    "amenities.shampoo_soap": [
                      "The amenities.shampoo soap field is required."
                    ],
                    "amenities.single_level_home": [
                      "The amenities.single level home field is required."
                    ],
                    "amenities.skating": [
                      "The amenities.skating field is required."
                    ],
                    "amenities.ski_in_ski_out": [
                      "The amenities.ski in ski out field is required."
                    ],
                    "amenities.skydiving": [
                      "The amenities.skydiving field is required."
                    ],
                    "amenities.snorkeling": [
                      "The amenities.snorkeling field is required."
                    ],
                    "amenities.snowboarding": [
                      "The amenities.snowboarding field is required."
                    ],
                    "amenities.snowmobile_trail": [
                      "The amenities.snowmobile trail field is required."
                    ],
                    "amenities.snowshoeing": [
                      "The amenities.snowshoeing field is required."
                    ],
                    "amenities.spa_services": [
                      "The amenities.spa services field is required."
                    ],
                    "amenities.sport_team_training": [
                      "The amenities.sport team training field is required."
                    ],
                    "amenities.stair_gates": [
                      "The amenities.stair gates field is required."
                    ],
                    "amenities.stove": [
                      "The amenities.stove field is required."
                    ],
                    "amenities.swimming": [
                      "The amenities.swimming field is required."
                    ],
                    "amenities.table_corner_guards": [
                      "The amenities.table corner guards field is required."
                    ],
                    "amenities.tea_coffee_included": [
                      "The amenities.tea coffee included field is required."
                    ],
                    "amenities.tennis": [
                      "The amenities.tennis field is required."
                    ],
                    "amenities.toilet_paper": [
                      "The amenities.toilet paper field is required."
                    ],
                    "amenities.towels": [
                      "The amenities.towels field is required."
                    ],
                    "amenities.tree_climbing": [
                      "The amenities.tree climbing field is required."
                    ],
                    "amenities.tv": [
                      "The amenities.tv field is required."
                    ],
                    "amenities.volleyball": [
                      "The amenities.volleyball field is required."
                    ],
                    "amenities.volleyball_net": [
                      "The amenities.volleyball net field is required."
                    ],
                    "amenities.washer": [
                      "The amenities.washer field is required."
                    ],
                    "amenities.water_skiing": [
                      "The amenities.water skiing field is required."
                    ],
                    "amenities.water_sliding": [
                      "The amenities.water sliding field is required."
                    ],
                    "amenities.wedding": [
                      "The amenities.wedding field is required."
                    ],
                    "amenities.wheelchair_accessible": [
                      "The amenities.wheelchair accessible field is required."
                    ],
                    "amenities.whitewater_rafting": [
                      "The amenities.whitewater rafting field is required."
                    ],
                    "amenities.window_guards": [
                      "The amenities.window guards field is required."
                    ],
                    "amenities.windsurfing": [
                      "The amenities.windsurfing field is required."
                    ],
                    "amenities.wireless_internet": [
                      "The amenities.wireless internet field is required."
                    ]
                  }
                }

## Get property calendar [/api/v1/properties/{uuid}/calendar GET]
Retrieve the property calendar for the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property


### api/v1/properties/{uuid}/calendar [GET]
+ Request (application/json)

        {
            "api_token": ""
        }


+ Response 200 (application/json)

    
    + Body

            {
              
                       "data": [
                                {
                                      "id": "3474a985-afa6-4bfe-8047-3912fc36abfc",
                                      "price": 200,
                                      "note": "",
                                      "is_blocked": true,
                                      "date": "2019-11-29T00:00:00.000000Z"
                                    },
                                    {
                                      "id": "2b4f8f32-cb3d-4c53-ae4a-df7250d08245",
                                      "price": 200,
                                      "note": "",
                                      "is_blocked": true,
                                      "date": "2019-11-30T00:00:00.000000Z"
                                    },
                                    {
                                      "id": "de9bcedc-15ab-43ff-8496-7803e3ba30ab",
                                      "price": 100,
                                      "note": "",
                                      "is_blocked": true,
                                      "date": "2019-12-01T00:00:00.000000Z"
                                    },
                                    {
                                      "id": "e82cb288-283a-4579-a2ea-e1ab5b001102",
                                      "price": 100,
                                      "note": "",
                                      "is_blocked": true,
                                      "date": "2019-12-02T00:00:00.000000Z"
                                    }
                      ]
            }
            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

## Set property calendar [/api/v1/properties/{uuid}/calendar PUT]
Edit the property calendar  associated to the provided property id
The start and end dates are included in the period of the special price.
+ Parameters

    + uuid (required, string) ... The unique id of the property

             
### api/v1/properties/{uuid}/spacial-prices [PUT]
+ Request (application/json)

    

    + Spacial-prices
    + `start_date` required date.
    + `end_date` required date.
    + `weekend_price` required numeric.
    + `special_price` required numeric.
    + `availability` required boolean.

    + Body

            {
              "api_token": "",
              "start_date" : "2019-04-20",
              "end_date" : "2019-04-30",
              "availability" : true,
              "weekend_price": 200,
              "special_price": 100
            }
            

+ Response 200 (application/json)

    
    + Body

            {
              
                       "data": [
                                   {
                                      "id": "3474a985-afa6-4bfe-8047-3912fc36abfc",
                                      "price": 200,
                                      "note": "",
                                      "is_blocked": true,
                                      "date": "2019-11-29T00:00:00.000000Z"
                                    },
                                    {
                                      "id": "2b4f8f32-cb3d-4c53-ae4a-df7250d08245",
                                      "price": 200,
                                      "note": "",
                                      "is_blocked": true,
                                      "date": "2019-11-30T00:00:00.000000Z"
                                    },
                                    {
                                      "id": "de9bcedc-15ab-43ff-8496-7803e3ba30ab",
                                      "price": 100,
                                      "note": "",
                                      "is_blocked": true,
                                      "date": "2019-12-01T00:00:00.000000Z"
                                    },
                                    {
                                      "id": "e82cb288-283a-4579-a2ea-e1ab5b001102",
                                      "price": 100,
                                      "note": "",
                                      "is_blocked": true,
                                      "date": "2019-12-02T00:00:00.000000Z"
                                    }
                      ]
            }
            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "start_date": [
                      "The start date field is required."
                    ],
                    "end_date": [
                      "The end date field is required."
                    ],
                    "availability": [
                      "The availability field is required."
                    ],
                    "weekend_price": [
                      "The weekend price field is required."
                    ],
                    "special_price": [
                      "The special price field is required."
                    ]
                  }
                }
                

## Delete property calendar [/api/v1/properties/{uuid}/calendar DELETE]
Delete calendar associated to the provided property id.
The special prices between the start and end dates are replaced by the base price
+ Parameters

    + uuid (required, string) ... The unique id of the property

                          
### api/v1/properties/{uuid}/calendar [DELETE]
+ Request (application/json)

    

    + Spacial-prices
    + `start_date` required date.
    + `end_date` required date.
    

    + Body

            {
              "api_token": "",
              "start_date" : "2019-04-20",
              "end_date" : "2019-04-30"
            }
            

+ Response 200 (application/json)

    
    + Body

            {
              
                 "data": []
            }
            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "start_date": [
                      "The start date field is required."
                    ],
                    "end_date": [
                      "The end date field is required."
                    ]
                  }
                }


             
             
## Get property descriptions [/api/v1/properties/{uuid}/descriptions GET] 
Retrieve descriptions with both language french and english associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/descriptions [GET]

+ Request (application/json)

        {
            "api_token": ""
        }
        

+ Response 200 (application/json)

    
    + Body

            {
              "data":[
                    {
                      "id": "367298fc-9495-45fc-aa1a-8c35663bd4f7",
                      "language": "english",
                      "title": "nagpur test property",
                      "about_this_property": "lora lpsm doller content sit amit.",
                      "home_access": "lora lpsm doller content sit amit.",
                      "host_availibility": "lora lpsm doller content sit amit.",
                      "other_things_to_know": "lora lpsm doller content sit amit.",
                      "birds_eye_view": "lora lpsm doller content sit amit.",
                      "travelling_around": "lora lpsm doller content sit amit.",
                      "description": "lora lpsm doller content sit amit."
                    },
                    {
                      "id": "1e1a7c36-ddc6-44e9-b7da-85a1240c42e5",
                      "language": "frensh",
                      "title": "nagpur test property",
                      "about_this_property": "lora lpsm doller content sit amit.",
                      "home_access": "lora lpsm doller content sit amit.",
                      "host_availibility": "lora lpsm doller content sit amit.",
                      "other_things_to_know": "lora lpsm doller content sit amit.",
                      "birds_eye_view": "lora lpsm doller content sit amit.",
                      "travelling_around": "lora lpsm doller content sit amit.",
                      "description": "lora lpsm doller content sit amit."
                    }
                  ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
## Set property descriptions [/api/v1/properties/{uuid}/descriptions PUT] 
Edit description french or english associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property


### api/v1/properties/{uuid}/descriptions [PUT]
+ Request (application/json)

    

    + descriptions
    + `language` required string frensh or english.
    + `title` required string.
    + `about_this_property` string.
    + `home_access` string.
    + `host_availibility` string.
    + `other_things_to_know` string.
    + `birds_eye_view` string.
    + `travelling_around` string.
    + `description` required string
    
    
    

    + Body

            {
              "api_token": "",
              "language": "english",
              "title": "nagpur test property",
              "about_this_property": "lora lpsm doller content sit amit.",
              "home_access": "lora lpsm doller content sit amit.",
              "host_availibility": "lora lpsm doller content sit amit.",
              "other_things_to_know": "lora lpsm doller content sit amit.",
              "birds_eye_view": "lora lpsm doller content sit amit.",
              "travelling_around": "lora lpsm doller content sit amit.",
              "description": "lora lpsm doller content sit amit."
            }
            


+ Response 200 (application/json)

    
    + Body

            {
              "data":[
                    {
                      "id": "367298fc-9495-45fc-aa1a-8c35663bd4f7",
                      "language": "english",
                      "title": "nagpur test property",
                      "about_this_property": "lora lpsm doller content sit amit.",
                      "home_access": "lora lpsm doller content sit amit.",
                      "host_availibility": "lora lpsm doller content sit amit.",
                      "other_things_to_know": "lora lpsm doller content sit amit.",
                      "birds_eye_view": "lora lpsm doller content sit amit.",
                      "travelling_around": "lora lpsm doller content sit amit.",
                      "description": "lora lpsm doller content sit amit."
                    }
                  ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

## Delete property descriptions [/api/v1/properties/{uuid}/descriptions DELETE] 
DELETE description associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property


### api/v1/properties/{uuid}/descriptions [DELETE]
+ Request (application/json)

    

    + descriptions
    + `description_id` required string.
   
    
    
    

    + Body

            {
              "api_token": "",
              "description_id": "367298fc-9495-45fc-aa1a-8c35663bd4f7"
            }
            


+ Response 200 (application/json)

    
    + Body

            {
              "data":[
                    {
                      "id": "367298fc-9495-45fc-aa1a-8c35663bd4f7",
                      "language": "english",
                      "title": "nagpur test property",
                      "about_this_property": "lora lpsm doller content sit amit.",
                      "home_access": "lora lpsm doller content sit amit.",
                      "host_availibility": "lora lpsm doller content sit amit.",
                      "other_things_to_know": "lora lpsm doller content sit amit.",
                      "birds_eye_view": "lora lpsm doller content sit amit.",
                      "travelling_around": "lora lpsm doller content sit amit.",
                      "description": "lora lpsm doller content sit amit."
                    }
                  ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
             
## Get property location  [/api/v1/properties/{uuid}/location GET]       
Retrieve location associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/location [GET]

+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "id": "8cbb2ee7-006b-4758-8c0b-5b60aca1f9bf",
                "country": "Canada",
                "state": "QuéBec",
                "city": "QuéBec",
                "address": "rue fortier",
                "zip_code": "J0B2T0",
                "suite_building": "lora lpsm doller",
                "latitude": "21.1645025",
                "longitude": "79.0821583"
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

## PUT property location  [/api/v1/properties/{uuid}/location PUT]       
Edit location associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/location [PUT]
+ Request (application/json)

    

    + location
    + `country` required string.
    + `state` required string.
    + `city` required string.
    + `address` required string.
    + `zip_code`  required string.
    + `latitude`  required string.
    + `longitude`  required string.
   
    
    
    

    + Body

            {
              "api_token": "",
              "country": "Canada",
            "state": "QuéBec",
            "city": "QuéBec",
            "address": "rue fortier",
            "zip_code": "J0B2T0",
            "latitude": "21.1645025",
            "longitude": "79.0821583"
            }
            


+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "id": "8cbb2ee7-006b-4758-8c0b-5b60aca1f9bf",
                "country": "Canada",
                "state": "QuéBec",
                "city": "QuéBec",
                "address": "rue fortier",
                "zip_code": "J0B2T0",
                "suite_building": "lora lpsm doller",
                 "latitude": "21.1645025",
               "longitude": "79.0821583"
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }


+ Response 422 (application/json)

    + Body

            {
              "message": "The given data was invalid.",
              "errors": {
                "country": [
                  "The country field is required."
                ],
                "state": [
                  "The state field is required."
                ],
                "city": [
                  "The city field is required."
                ],
                "address": [
                  "The address field is required."
                ],
                 "latitude": [
                  "The latitude field is required."
                ],
                "longitude": [
                  "The longitude field is required."
                ]
              }
            }  
             
## set property category [/api/v1/properties/{uuid}/category PUT] 
Edit the category associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### /api/v1/properties/{uuid}/category [PUT]
+ Request (application/json)

    

    + listing_category
    + `listing_category` required string.

    + Body

            {
              "api_token": "",
              "listing_category": "country_home",
            }
            

+ Response 200 (application/json)

    
    + Body

            {
              "message": "success"
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }


+ Response 422 (application/json)

    + Body

             {
              "message": "The given data was invalid.",
              "errors": {
                "listing_category": [
                  "The selected listing category is invalid."
                ]
              }
            }
             

## Set roperty rent type [/api/v1/properties/{uuid}/rent-type PUT] 
Edit the rent type associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### /api/v1/properties/{uuid}/rent-type [PUT]
+ Request (application/json)

    

    + Rent-type
    + `rent_type` required string.

    + Body

            {
              "api_token": "",
              "rent_type": "shared_room",
            }
            

+ Response 200 (application/json)

    
    + Body

            {
              "message": "success"
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
+ Response 422 (application/json)

    + Body

             {
              "message": "The given data was invalid.",
              "errors": {
                "rent_type": [
                  "The selected rent type is invalid."
                ]
              }
            }

## Set roperty currency [/api/v1/properties/{uuid}/currency PUT] 
Edit the currency associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### /api/v1/properties/{uuid}/currency [PUT]

+ Request (application/json)

    

    + Currency
    + `currency` required string.

    + Body

            {
              "api_token": "",
              "currency": "USD",
            }
            
            

+ Response 200 (application/json)

    
    + Body

            {
              "message": "success"
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

+ Response 422 (application/json)

    + Body

             {
              "message": "The given data was invalid.",
              "errors": {
                "rent_type": [
                  "The selected currency is invalid."
                ]
              }
            }
             
## Get instant booking qualifications [/api/v1/properties/{uuid}/instant-booking-qualification GET]
Retrieve Instant booking qualifications  associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property


### /api/v1/properties/{uuid}/instant-booking-qualification [GET]

+ Request (application/json)

        {
            "api_token": ""
           
        }

+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "guest_payement": true,
                "guest_email": false,
                "guest_photo": true
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

## Set instant booking qualifications [/api/v1/properties/{uuid}/instant-booking-qualification PUT]
Edit Instant booking qualifications  associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property


### /api/v1/properties/{uuid}/instant-booking-qualification [PUT]

+ Request (application/json)

    

    + qualifications
    + `guest_payement` required string.
    + `guest_email`  required string. 
    + `guest_photo`  required string.

    + Body

            {
              "api_token": "",
              "qualifications" : {
                                "guest_payement": false,
                                "guest_email": false,
                                "guest_photo": true
                        
                                }
            }
            
            
+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "guest_payement": false,
                "guest_email": false,
                "guest_photo": true
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "qualifications": [
                      "The qualifications field is required."
                    ],
                    "qualifications.guest_payement": [
                      "The qualifications.the guest needs to have a valid payment option field is required."
                    ],
                    "qualifications.guest_email": [
                      "The qualifications.the guest needs to have a verified email and phone number field is required."
                    ],
                    "qualifications.guest_photo": [
                      "The qualifications.the guest needs to have profile photo field is required."
                    ]
                  }
                }
             
## Get guest expectations [/api/v1/properties/{uuid}/guest-expectations GET]
Retrieve guest expectations associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### /api/v1/properties/{uuid}/guest-expectations [GET]

+ Request (application/json)

        {
            "api_token": ""
           
        }

+ Response 200 (application/json)

    
    + Body

            {
              "data":  {
                        "must_climb_stairs": false,
                        "potential_for_noise": false,
                        "pets_live_on_property": false,
                        "no_parking_on_property": false,
                        "some_spaces_are_shared": false,
                        "amenity_limitations": false
                      }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
## Set guest expectations [/api/v1/properties/{uuid}/guest-expectations PUT]
Edit guest expectations associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property


### /api/v1/properties/{uuid}/guest-expectations [PUT]
+ Request (application/json)

    

    + guest_expectations
    + `must_climb_stairs` required string.
    + `potential_for_noise`  required string. 
    + `pets_live_on_property`  required string.
    + `no_parking_on_property`  required string.
    + `some_spaces_are_shared`   required string.
    + `amenity_limitations` required string.

    + Body

            {
              "api_token": "",
              "guest_expectations" : {
                                "must_climb_stairs": false,
                                "potential_for_noise": false,
                                "pets_live_on_property": true,
                                "no_parking_on_property": true,
                                "some_spaces_are_shared": false,
                                "amenity_limitations": false
                        
                                }
            }
            


+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "must_climb_stairs": true,
                "potential_for_noise": false,
                "pets_live_on_property": true,
                "no_parking_on_property": true,
                "some_spaces_are_shared": false,
                "amenity_limitations": false
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                     "guest_expectations": [
                          "The guest expectations field is required."
                        ],
                        "guest_expectations.must_climb_stairs": [
                          "The guest expectations.must climb stairs field is required."
                        ],
                        "guest_expectations.potential_for_noise": [
                          "The guest expectations.potenial for noise field is required."
                        ],
                        "guest_expectations.pets_live_on_property": [
                          "The guest expectations.pets live on property field is required."
                        ],
                        "guest_expectations.no_parking_on_property": [
                          "The guest expectations.no parking on property field is required."
                        ],
                        "guest_expectations.some_spaces_are_shared": [
                          "The guest expectations.some spaces are shared field is required."
                        ],
                        "guest_expectations.amenity_limitations": [
                          "The guest expectations.amenity limitations field is required."
                        ]
                  }
                }
             
## Get property services [/api/v1/properties/{uuid}/services GET]
Retrieve services associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/services [GET]

+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                         {
                          "id": "3b89b95a-9dc3-4316-a9f5-1c5b226d7188",
                          "name": "cleaning dearing stay",
                          "price": "20",
                          "type": "per_night"
                        }
                        ]
                }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

## Create property service [/api/v1/properties/{uuid}/services POST]
Create service associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property

            
### api/v1/properties/{uuid}/services [POST]
+ Request (application/json)

    

    + service
    + `name` required unique string.
    + `price`  required numeric. 
    + `type`  required string .
    

    + Body

            {
              "api_token": "",
              "name": "cleaning dearing stay",
              "price": "20",
              "type": "per_night",
                                
            }
            


+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                    {
                          "id": "3b89b95a-9dc3-4316-a9f5-1c5b226d7188",
                          "name": "cleaning dearing stay",
                          "price": "20",
                          "type": "per_night"
                        }
                  ]
                }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
+ Response 422 (application/json)

    + Body

            {
                  "message": "The given data was invalid.",
                  "errors": {
                        "name": [
                          "The name field is required."
                        ],
                        "value": [
                          "The value field is required."
                        ],
                        "type": [
                          "The type field is required."
                        ]
                  }
            }
 
## Set property service [/api/v1/properties/{uuid}/services PUT]
Edit service associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property

            
### api/v1/properties/{uuid}/services [PUT]
+ Request (application/json)

    

    + service
    + `service_id` required string.
    + `name` required unique string.
    + `price`  required numeric. 
    + `type`  required string .
    

    + Body

            {
              "api_token": "",
              "service_id" : "3b89b95a-9dc3-4316-a9f5-1c5b226d7188",
              "name": "cleaning dearing stay",
              "price": "20",
              "type": "per_night_guest",
                                
            }
            

+ Request (application/json)

        {
            "api_token": "",
            
            "name": "cleaning dearing stay",
            "price": "17",
            "type": "per_night_guest"
        }

+ Response 200 (application/json)

    
    + Body

            {
                  "data": {
                          "id": "3b89b95a-9dc3-4316-a9f5-1c5b226d7188",
                          "name": "cleaning dearing stay",
                          "price": "17",
                          "type": "per_night_guest"
                        }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
+ Response 422 (application/json)

    + Body

            {
                  "message": "The given data was invalid.",
                  "errors": {
                   "name": [
                          "The name field is required."
                        ],
                        "name": [
                          "The name field is required."
                        ],
                        "value": [
                          "The value field is required."
                        ],
                        "type": [
                          "The type field is required."
                        ]
                  }
            }

## Delete property service [/api/v1/properties/{uuid}/services Delete]
Delete service associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property

            
### api/v1/properties/{uuid}/services [DELETE]
+ Request (application/json)

    

    + service
    + `service_id` required string.
    

    + Body

            {
              "api_token": "",
              "service_id" : "3b89b95a-9dc3-4316-a9f5-1c5b226d7188"
                                
            }
            


+ Response 200 (application/json)

    
    + Body

            {
                  "message": "success"
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
+ Response 422 (application/json)

    + Body

            {
                  "message": "The given data was invalid.",
                  "errors": {
                    "service_id": [
                      "The selected service id is invalid."
                    ]
                  }
                }
                
                
## Get property bookings [/api/v1/properties/{uuid}/bookings GET] 
Retrieve  bookings associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/bookings [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
                  "data" : [
                  {
                      "id": "3485cc19-5e39-4252-a846-814b7ae6e284",
                      "status": "confirmed",
                      "guest_account_id": "97685fc5-4234-43be-900e-9efe5399632f",
                      "guests_count": 1,
                      "request_date": true,
                      "checkin": "Mon, May 20th 2019",
                      "checkout": "Wed, May 22th 2019",
                      "nights_count": null,
                      "nights_cost": 0,
                      "day_price": 0,
                      "discount": 0,
                      "service_fee": 13.5,
                      "cleaning_fee": 0,
                      "security_deposit": 0,
                      "total_fee": 0,
                      "total": 105.5,
                      "property":  {
                            "name": "Testing Property",
                            "image": "http:\/\/wechalet.local\/images\/default_listing.jpg",
                            "address": "rue fortier",
                            "booking_settings": {
                              "instant_booking": true,
                              "guest_qualifications": {
                                "guest_photo": true,
                                "guest_email": false,
                                "guest_payement": true
                              },
                              "house_rules": {
                                "allow_childrens": true,
                                "allow_infants": true,
                                "allow_pets": true,
                                "allow_smoking": false,
                                "allow_parties": true,
                                "other_rules": "other_rules"
                              },
                              "guest_expectations": {
                                "must_climb_stairs": true,
                                "potential_for_noise": false,
                                "pet_live_on_property": false,
                                "no_parking_on_property": true,
                                "some_spaces_are_shared": false,
                                "amenity_limitations": false
                              }
                            }
                          }
                    }
                  ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
             
## Get property reviews [/api/v1/properties/{uuid}/reviews GET] 
Retrieve  reviwes associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/reviews [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
                  "data" : [
                   {
                      "id": "ce1c4d3a-d476-45b6-81e6-e6f06599622e",
                      "comment": "Superbe lieu qui marie rusticité et rénovations contemporaines.",
                      "rating": "4",
                      "booking_id": "f1172577-35c8-4370-95d0-09420ad608c1",
                      "creator_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "created_at": "2019-08-13T12:56:25.000000Z"
                    },
                    {
                      "id": "a1663948-2b1d-4ac5-ac3b-0c218b0bf4b1",
                      "comment": "Le chalet est vraiment charmant, très propre et accueillant. On a passé un très bon séjour entre amis avec nos enfants. Dany est très disponible et nous a super bien aidés pour notre arrivée. N'hésitez pas à le réserver!",
                      "rating": "2",
                      "booking_id": "f1172577-35c8-4370-95d0-09420ad608c1",
                      "creator_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "created_at": "2019-08-13T12:56:25.000000Z"
                    }
                  ]
            }
            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
             
## Get user reviews [/api/v1/reviews GET] 
Retrieve  reviwes associated to the current user

### api/v1/reviews [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
                  "data" : [
                   {
                      "id": "ce1c4d3a-d476-45b6-81e6-e6f06599622e",
                      "comment": "Superbe lieu qui marie rusticité et rénovations contemporaines.",
                      "rating": "4",
                      "booking_id": "f1172577-35c8-4370-95d0-09420ad608c1",
                      "creator_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "created_at": "2019-08-13T12:56:25.000000Z"
                    }
                  ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                


## Create user reviews [/api/v1/reviews POST] 
Create review for a booking

### api/v1/reviews [POST]
+ Request (application/json)

    + review
    + `booking_id` required string.
    + `comment` required string.
    + `rating` required integer.
    

    + Body

            {
             "api_token": "", 
             "booking_id": "f1172577-35c8-4370-95d0-09420ad608c1", 
             "comment": "This is an awesome space and well located.",
             "rating": 4
                                
            }
            
+ Response 200 (application/json)

    
    + Body

            {
                  "data" : [
                   {
                      "id": "ce1c4d3a-d476-45b6-81e6-e6f06599622e",
                      "comment": "Superbe lieu qui marie rusticité et rénovations contemporaines.",
                      "rating": "4",
                      "booking_id": "f1172577-35c8-4370-95d0-09420ad608c1",
                      "creator_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "created_at": "2019-08-13T12:56:25.000000Z"
                    }
                  ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
             
             
+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "booking_id": [
                      "The booking id field is required."
                    ],
                    "comment": [
                      "The comment field is required."
                    ],
                    "rating": [
                      "The rating field is required."
                    ]
                  }
                }
             



                

## show review [/api/v1/reviews/{uuid} GET] 
show the review
+ Parameters

    + uuid (required, string) ... The unique id of the review

### api/v1/reviews/{uuid} [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
                  "data" : 
                  {
                      "id": "3485cc19-5e39-4252-a846-814b7ae6e284",
                      "comment": "Superbe lieu qui marie rusticité et rénovations contemporaines.",
                      "rating": "4",
                      "booking_id": "f1172577-35c8-4370-95d0-09420ad608c1",
                      "creator_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "created_at": "2019-08-13T12:56:25.000000Z"
                 }         
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
             
                          


## update review [/api/v1/reviews/{uuid} PUT] 
Update the review
+ Parameters

    + uuid (required, string) ... The unique id of the review

### api/v1/reviews/{uuid} [PUT]
+ Request (application/json)

    + review
    + `comment` required string.
    + `rating` required integer.
    

    + Body

            {
             "api_token": "", 
             "comment": "This is an awesome space and well located.",
             "rating": 4
                                
            }
            
            
            
+ Response 200 (application/json)

    
    + Body

            {
                  "data" : 
                  {
                      "id": "3485cc19-5e39-4252-a846-814b7ae6e284",
                      "comment": "Superbe lieu qui marie rusticité et rénovations contemporaines.",
                      "rating": "4",
                      "booking_id": "f1172577-35c8-4370-95d0-09420ad608c1",
                      "creator_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "created_at": "2019-08-13T12:56:25.000000Z"
                 }         
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
             


## delete review [/api/v1/reviews/{uuid} DELETE] 
Remove the review
+ Parameters

    + uuid (required, string) ... The unique id of the review

### api/v1/reviews/{uuid} [DELETE]
+ Request (application/json)


    + Body

            {
             "api_token": ""
            
            }
            
            
            
+ Response 200 (application/json)

    
    + Body

            {
                  "data" : 
                  {
                      "id": "3485cc19-5e39-4252-a846-814b7ae6e284",
                      "comment": "Superbe lieu qui marie rusticité et rénovations contemporaines.",
                      "rating": "4",
                      "booking_id": "f1172577-35c8-4370-95d0-09420ad608c1",
                      "creator_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "created_at": "2019-08-13T12:56:25.000000Z"
                 }         
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
             
                                    
                          
## GET property owner [/api/v1/properties/{uuid}/owner GET] 
Retrieve  informations of the owner associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/owner [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "id": "80d90abb-4d0d-4e23-99b8-e7b35013ec33",
                "profile": {
                  "firstname": "Dany",
                  "lastname": "Dany",
                  "birthdate": null,
                  "language": "en",
                  "gender": "male",
                  "location": "Earth",
                  "about_me": "Bonjour! Mon nom est Dany et je suis à l'origine d'un cinéaste entrepreneur qui aime rencontrer les gens et voyager dans le monde.
                  "secondary_email": null,
                  "secondary_phone": null,
                  "payout_email": null,
                  "avatar": "http:\/\/wechalet.local\/wechalet\/images\/default\/default_user.png"
                },
                "email": "dany@airbnbsecrets.com",
                "phone_number": null,
                "roles": [
                   "host"
                 ]
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

## Set property owner [/api/v1/properties/{uuid}/owner PUT] 
Edit informations of the owner associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property


### api/v1/properties/{uuid}/owner [PUT]
+ Request (application/json)

    

    + owner
    + `firstname` required string.
    + `lastname`  required string.
    + `birthdate` required date.
    + `language` required string.
    + `gender`   string.
    + `location`   string.
    + `about_me`  string.
    + `secondary_email`  email.
    + `secondary_phone` string.
    + `payout_email`  email.
    + `email`required email.
    
    

    + Body

            {
              "api_token": "",
              "firstname": "Dany",
              "lastname": "Dany",
              "birthdate": null,
              "language": "en",
              "gender": "male",
              "location": "Earth",
              "about_me": "Bonjour! Mon nom est Dany",
              "secondary_email": null,
              "secondary_phone": null,
              "payout_email": null,
              "email": "dany@airbnbsecrets.com"
                                
            }
            

+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "id": "80d90abb-4d0d-4e23-99b8-e7b35013ec33",
                "profile": {
                  "firstname": "Dany",
                  "lastname": "Dany",
                  "birthdate": null,
                  "language": "en",
                  "gender": "male",
                  "location": "Earth",
                  "about_me": "Bonjour! Mon nom est Dany et je suis à l'origine d'un cinéaste entrepreneur qui aime rencontrer les gens et voyager dans le monde.
                  "secondary_email": null,
                  "secondary_phone": null,
                  "payout_email": null,
                  "avatar": "http:\/\/wechalet.local\/wechalet\/images\/default\/default_user.png"
                },
                "email": "dany@airbnbsecrets.com",
                "phone_number": null,
                "roles": [
                   "host"
                 ]
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
             
                 

+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "firstname": [
                      "The firstname field is required."
                    ],
                    "lastname": [
                      "The lastname field is required."
                    ],
                    "birthdate": [
                      "The birthdate field is required."
                    ],
                    "language": [
                      "The language field is required."
                    ],
                    "gender": [
                      "The gender field is required."
                    ],
                    "email": [
                      "The email field is required."
                    ],
                    "password": [
                      "The password field is required."
                    ]
                  }
                }
                             
## Get property guests [/api/v1/properties/{uuid}/guests GET] 
Retrieve  guests associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/guests [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
              "data": [
              {
                  "id": "f3231d88-2370-4a80-b48c-66a5c058c73f",
                  "profile": {
                    "firstname": "Imran",
                    "lastname": "Imran",
                    "birthdate": null,
                    "language": "en",
                    "gender": "male",
                    "location": "Earth",
                    "about_me": "hbuhui",
                    "secondary_email": null,
                    "secondary_phone": null,
                    "payout_email": null,
                    "avatar": "http:\/\/wechalet.local\/wechalet\/images\/default\/default_user.png"
                  },
                  "email": "fudugo.imran@gmail.com"
                },
                {
                  "id": "5100549a-330a-480b-925e-63a0f70e11d7",
                  "profile": {
                    "firstname": "Pravin",
                    "lastname": "Pravin",
                    "birthdate": null,
                    "language": "en",
                    "gender": "male",
                    "location": "Earth",
                    "about_me": "",
                    "secondary_email": null,
                    "secondary_phone": null,
                    "payout_email": null,
                    "avatar": "http:\/\/wechalet.local\/wechalet\/images\/default\/default_user.png"
                  },
                  "email": "pravinfwork@gmail.com"
                }
            ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             
## Get property rooms [/api/v1/properties/{uuid}/rooms GET] 
Retrieve  and edit rooms associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/rooms [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
              "data": [
              {
                  "id": "d8e5c0d4-0cc1-4717-8326-b3ee3a31df3d",
                  "name": "bedroom_1",
                  "beds": {
                    "queen": "1",
                    "double": "1",
                    "single": "1",
                    "bunk_bed": "0",
                    "sofa_bed": "0"
                  }
                },
                {
                  "id": "5171bfb4-6476-4661-8269-dd1175035213",
                  "name": "common_spaces",
                  "beds": {
                    "couch": "0",
                    "single": "0",
                    "sofa_bed": "1",
                    "floor_mattress": "0"
                  }
                }
            ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

## Set property rooms [/api/v1/properties/{uuid}/rooms PUT] 
Edit rooms associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

                        
### api/v1/properties/{uuid}/rooms [PUT]

+ Request (application/json)

    + Body

            {
              "api_token": "",
              "bedrooms": [
                {
                  "name": "bedroom_1",
                  "queen": "2",
                  "double": "2",
                  "single": "2",
                  "sofa_bed": "2"
                },
                {
                  "name": "common_spaces",
                  "couch": "0",
                  "sofa_bed": "0",
                  "floor_mattress": "0"
                },
                {
                  "name": "bedroom_3",
                  "queen": "2",
                  "double": "2",
                  "single": "2",
                  "sofa_bed": "2"
                }
              ]
                                
            }
            

            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                    {
                      "id": "840eda2b-d1dd-47a3-a6c7-a3930b52cd7f",
                      "name": "0",
                      "beds": {
                        "name": "bedroom_1",
                        "queen": "2",
                        "double": "2",
                        "single": "2",
                        "sofa_bed": "2"
                      }
                    },
                    {
                      "id": "fb111ea7-24b8-4a63-b4f5-0301b1a96e0b",
                      "name": "1",
                      "beds": {
                        "name": "common_spaces",
                        "couch": "0",
                        "sofa_bed": "0",
                        "floor_mattress": "0"
                      }
                    },
                    {
                      "id": "d58fa2bb-d8db-4504-a2a9-a4ccc14dc879",
                      "name": "2",
                      "beds": {
                        "name": "bedroom_3",
                        "queen": "2",
                        "double": "2",
                        "single": "2",
                        "sofa_bed": "2"
                      }
                    }
                  ]
                }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
                                       
+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "bedrooms": [
                      "The bedrooms field is required."
                    ]
                  }
                }            

## Delete property room [/api/properties/{uuid}/rooms DELETE] 
Delete  and edit rooms associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

             
### api/v1/properties/{uuid}/rooms [DELETE]

+ Request (application/json)

    

    + bedrooms
    + `bedrooms` required array.
    
    

    + Body

            {
              "api_token": "",
              "bedrooms": [
                "d8e5c0d4-0cc1-4717-8326-b3ee3a31df3d"
              ]
                                
            }

+ Request (application/json)

        {
          "api_token": "",
          "bedrooms": [
            "d8e5c0d4-0cc1-4717-8326-b3ee3a31df3d"
          ]
        }
            

+ Response 200 (application/json)

    
    + Body

            {
              "data": [
                {
                  "id": "fb111ea7-24b8-4a63-b4f5-0301b1a96e0b",
                  "name": "1",
                  "beds": {
                    "name": "common_spaces",
                    "couch": "0",
                    "sofa_bed": "0",
                    "floor_mattress": "0"
                  }
                },
                {
                  "id": "d58fa2bb-d8db-4504-a2a9-a4ccc14dc879",
                  "name": "2",
                  "beds": {
                    "name": "bedroom_3",
                    "queen": "2",
                    "double": "2",
                    "single": "2",
                    "sofa_bed": "2"
                  }
                }
              ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
                                       
+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "bedrooms": [
                      "The bedrooms field is required."
                    ]
                  }
                }                        
             
## Get property custom rules [/api/v1/properties/{uuid}/custom-rules GET] 
Retrieve custom rules associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/custom-rules [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
              "data": [
                 {
                  "id": "51c24fac-c479-450d-ae21-c0a30c224fa9",
                  "custom_rule": "During Feb 4, 2019 - Feb 4, 2019, guests stay for minimum 20 nights. They can only check in on 2019-02-04"
                }
            ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
 

## Create property custom rule [/api/v1/properties/{uuid}/custom-rules POST] 
Create custom rule associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

                         
### api/v1/properties/{uuid}/custom-rules [POST]
+ Request (application/json)

    

    + custom rule
    + `start_date` required date.
    + `end_date` required date.
    + `min_stay` required numeric
    + `min_stay_type` required string.
    + `checkin_day` required date.
    
    

    + Body

            {
              "api_token": "",
              "start_date": "2019-02-04",
              "end_date": "2019-02-24",
              "min_stay": 20,
              "min_stay_type": "nights",
              "checkin_day": "2019-02-04"
                                
            }


+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "id": "7c8072b9-e6f5-4324-98d1-7ea9363e8d66",
                "custom_rule": "During Feb 4, 2019 - Feb 4, 2019, guests stay for minimum 20 nights. They can only check in on 2019-02-04"
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
                                       
+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "start_date": [
                      "The start date field is required."
                    ],
                    "end_date": [
                      "The end date field is required."
                    ],
                    "min_stay": [
                      "The min stay field is required."
                    ],
                    "min_stay_type": [
                      "The min stay type field is required."
                    ],
                    "checkin_day": [
                      "The checkin day field is required."
                    ]
                  }
            }         


## Set property custom rule [/api/v1/properties/{uuid}/custom-rules PUT] 
Edit custom rule associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

             
### api/v1/properties/{uuid}/custom-rules [PUT]

+ Request (application/json)

    + custom rule
    + `custom_rule_id` required string.
    + `start_date` required date.
    + `end_date` required date.
    + `min_stay` required numeric
    + `min_stay_type` required string.
    + `checkin_day` required date.
    
    

    + Body

            {
              "api_token": "",
              "custom_rule_id" : "7c8072b9-e6f5-4324-98d1-7ea9363e8d66" ,
              "start_date": "2019-02-04",
              "end_date": "2019-02-24",
              "min_stay": 20,
              "min_stay_type": "nights",
              "checkin_day": "2019-02-04"
                                
            }
            

+ Response 200 (application/json)

    
    + Body

            {
              "data": {
                "id": "7c8072b9-e6f5-4324-98d1-7ea9363e8d66",
                "custom_rule": "During Feb 4, 2019 - Feb 4, 2019, guests stay for minimum 20 nights. They can only check in on 2019-02-04"
              }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
                                       
+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "custom_rule_id": [
                      "The custom rule id field is required."
                    ],
                    "start_date": [
                      "The start date field is required."
                    ],
                    "end_date": [
                      "The end date field is required."
                    ],
                    "min_stay": [
                      "The min stay field is required."
                    ],
                    "min_stay_type": [
                      "The min stay type field is required."
                    ],
                    "checkin_day": [
                      "The checkin day field is required."
                    ]
                  }
                }   

## Delete property custom rule [/api/v1/properties/{uuid}/custom-rules DELETE] 
Delete custom rule associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

             
### api/v1/properties/{uuid}/custom-rules [DELETE]
+ Request (application/json)

    + custom rule
    + `custom_rule_id` required string.
     
    

    + Body

            {
              "api_token": "",
              "custom_rule_id" : "7c8072b9-e6f5-4324-98d1-7ea9363e8d66" 
                                
            }
            
  

+ Response 200 (application/json)

    
    + Body

            {
                  "data": {
                    "id": "51c24fac-c479-450d-ae21-c0a30c224fa9",
                    "custom_rule": "During Feb 4, 2019 - Feb 8, 2019, guests stay for minimum 80 weeks. They can only check in on 2019-02-04"
                  }
              }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
                                       
+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "custom_rule_id": [
                      "The custom rule id field is required."
                    ]
                  }
                }                        
             
## Get property images [/api/v1/properties/{uuid}/images GET] 
Retrieve images associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/images [GET]


+ Request (application/json)

        {
            "api_token": ""
        }

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                    {
                      "id": "3-4",
                      "caption": null,
                      "url": "http:\/\/wechalet.local\/storage\/2\/3-4.jpg",
                      "is_main": true
                    }
                    
                  ]
                }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

## Create property images [/api/v1/properties/{uuid}/images POST] 
Create image associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property


                          
### api/v1/properties/{uuid}/images [POST]
+ Request (application/json)

    + image
    + `url` required url.
     
    

    + Body

            {
              "api_token": "",
              "url" : "https://wechalet.com/wp-content/uploads/2019/08/3-4.jpg" 
                                
            }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                    {
                      "id": "3-4",
                      "caption": null,
                      "url": "http:\/\/wechalet.local\/storage\/2\/3-4.jpg",
                      "is_main": true
                    }
                    
                  ]
                }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }


+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "url": [
                      "The url field is required."
                    ]
                  }
                }
                
## Delete property images [/api/v1/properties/{uuid}/images DELETE] 
Delete image associated to the provided property id
+ Parameters

    + uuid (required, string) ... The unique id of the property


                                            
### api/properties/{uuid}/images [DELETE]
+ Request (application/json)

    + image
    + `image_id` required string.
     
    

    + Body

            {
              "api_token": "",
              "image_id" : "3-4" 
                                
            }
            


+ Response 200 (application/json)

    
    + Body

            {
                  "data": [ ]
                }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
                

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }


+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "image_id": [
                      "The url field is required."
                    ]
                  }
                }

             
## Get user booking [/api/v1/hosts/bookings GET]
Retrieves all bookings that the current affiliate has make

### api/v1/hosts/bookings [GET]


+ Request (application/json)

        {
          "api_token": ""
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                        {
                          "id": "f1172577-35c8-4370-95d0-09420ad608c1",
                          "status": "contact_host",
                          "guest_account_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "guests_count": 1,
                          "request_date": true,
                          "checkin": "2018-12-24T00:00:00.000000Z",
                          "checkout": "2018-12-26T00:00:00.000000Z",
                          "nights_count": null,
                          "nights_cost": 0,
                          "day_price": 0,
                          "discount": 0,
                          "service_fee": 0,
                          "cleaning_fee": 0,
                          "security_deposit": 0,
                          "total_fee": 0,
                          "total": 0,
                          "last_updated": null,
                          "property": {
                            "name": "Panorama, Spa and St-Laurence River!",
                            "image": "http:\/\/wechalet.local\/wechalet\/images\/default\/default.jpg",
                            "address": "Saint-Joseph-de-la-Rive, Québec, Canada",
                            "booking_settings": {
                              "instant_booking": false,
                              "guest_qualifications": {
                                "guest_photo": false,
                                "guest_email": false,
                                "guest_payement": false
                              },
                              "house_rules": {
                                "allow_childrens": true,
                                "allow_infants": true,
                                "allow_pets": false,
                                "allow_smoking": false,
                                "allow_parties": false,
                                "other_rules": "other_rules"
                              },
                              "guest_expectations": {
                                "must_climb_stairs": false,
                                "potential_for_noise": false,
                                "pet_live_on_property": false,
                                "no_parking_on_property": false,
                                "some_spaces_are_shared": false,
                                "amenity_limitations": false
                              }
                            }
                          }
                        }
                  ]
              }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }



                
                   
                   
                   
 
## Show user booking [/api/v1/hosts/bookings/{uuid} GET]
Show a booking by uuid
+ Parameters

    + uuid (required, string) ... The unique id of the booking



### api/v1/hosts/bookings/{uuid} [GET]


+ Request (application/json)

        {
          "api_token": ""
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                        {
                          "id": "f1172577-35c8-4370-95d0-09420ad608c1",
                          "status": "contact_host",
                          "guest_account_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "guests_count": 1,
                          "request_date": true,
                          "checkin": "2018-12-24T00:00:00.000000Z",
                          "checkout": "2018-12-26T00:00:00.000000Z",
                          "nights_count": null,
                          "nights_cost": 0,
                          "day_price": 0,
                          "discount": 0,
                          "service_fee": 0,
                          "cleaning_fee": 0,
                          "security_deposit": 0,
                          "total_fee": 0,
                          "total": 0,
                          "last_updated": null,
                          "property": {
                            "name": "Panorama, Spa and St-Laurence River!",
                            "image": "http:\/\/wechalet.local\/wechalet\/images\/default\/default.jpg",
                            "address": "Saint-Joseph-de-la-Rive, Québec, Canada",
                            "booking_settings": {
                              "instant_booking": false,
                              "guest_qualifications": {
                                "guest_photo": false,
                                "guest_email": false,
                                "guest_payement": false
                              },
                              "house_rules": {
                                "allow_childrens": true,
                                "allow_infants": true,
                                "allow_pets": false,
                                "allow_smoking": false,
                                "allow_parties": false,
                                "other_rules": "other_rules"
                              },
                              "guest_expectations": {
                                "must_climb_stairs": false,
                                "potential_for_noise": false,
                                "pet_live_on_property": false,
                                "no_parking_on_property": false,
                                "some_spaces_are_shared": false,
                                "amenity_limitations": false
                              }
                            }
                          }
                        }
                  ]
              }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }

                

                   
 
## Response to booking [/api/v1/hosts/bookings/{uuid} PUT]
Response to a booking
+ Parameters

    + uuid (required, string) ... The unique id of the booking



### api/v1/hosts/bookings/{uuid} [PUT]


+ Request (application/json)

        {
          "api_token": "",
          "response" : "accepted"
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                        {
                          "id": "f1172577-35c8-4370-95d0-09420ad608c1",
                          "status": "accepted",
                          "guest_account_id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "guests_count": 1,
                          "request_date": true,
                          "checkin": "2018-12-24T00:00:00.000000Z",
                          "checkout": "2018-12-26T00:00:00.000000Z",
                          "nights_count": null,
                          "nights_cost": 0,
                          "day_price": 0,
                          "discount": 0,
                          "service_fee": 0,
                          "cleaning_fee": 0,
                          "security_deposit": 0,
                          "total_fee": 0,
                          "total": 0,
                          "last_updated": null,
                          "property": {
                            "name": "Panorama, Spa and St-Laurence River!",
                            "image": "http:\/\/wechalet.local\/wechalet\/images\/default\/default.jpg",
                            "address": "Saint-Joseph-de-la-Rive, Québec, Canada",
                            "booking_settings": {
                              "instant_booking": false,
                              "guest_qualifications": {
                                "guest_photo": false,
                                "guest_email": false,
                                "guest_payement": false
                              },
                              "house_rules": {
                                "allow_childrens": true,
                                "allow_infants": true,
                                "allow_pets": false,
                                "allow_smoking": false,
                                "allow_parties": false,
                                "other_rules": "other_rules"
                              },
                              "guest_expectations": {
                                "must_climb_stairs": false,
                                "potential_for_noise": false,
                                "pet_live_on_property": false,
                                "no_parking_on_property": false,
                                "some_spaces_are_shared": false,
                                "amenity_limitations": false
                              }
                            }
                          }
                        }
                  ]
              }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }

+ Response 404 (application/json)

    + Body

             {
                    "errors": "Resource not found!"
             }
             

+ Response 422 (application/json)

    + Body

             {
                    
                  "message": "The given data was invalid.",
                  "errors": {
                    "response": [
                      "The response field is required."
                    ]
                  }
             }
             
             

             

## Get currency [/api/currencies GET]
Retrieves all currencies 

### api/currencies [GET]


+ Request (application/json)

        {
          "api_token": ""
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                        {
                          "id": "3bc91b78-172b-48d4-aa5b-01f06b5923fb",
                          "name": "CAD"
                        },
                        {
                          "id": "d7b1d705-9eea-4bf9-b620-73f61354983a",
                          "name": "EUR"
                        },
                        {
                          "id": "8ab26f2b-08b0-436f-90a2-ddf1ce5bca55",
                          "name": "USD"
                        }
                      ]
              }

## Get rent-types [/api/rent-types GET]
Retrieves all rent types 

### api/rent-types [GET]


+ Request (application/json)

        {
          "api_token": ""
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                        {
                          "id": "c16062f8-e04e-4a8e-a4ad-b3b922cb51e6",
                          "name": "Entire home",
                          "slug": "entire_home"
                        },
                        {
                          "id": "b4fbdf3c-5b0a-4d41-a30c-c6ce8350cbf8",
                          "name": "Private room",
                          "slug": "private_room"
                        },
                        {
                          "id": "fb758944-36e2-4936-bdd2-11c16409d541",
                          "name": "Shared room",
                          "slug": "shared_room"
                        }
                      ]
              }


## Get listing-categories [/api/property-types GET]
Retrieves all listing categories 

### api/property-types [GET]


+ Request (application/json)

        {
          "api_token": ""
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                            {
                                  "id": "e9bab115-a094-4c04-90ca-74f4eab31161",
                                  "name": "House",
                                  "slug": "house"
                                },
                                {
                                  "id": "0ad982a3-f60d-4af9-8392-b7a69e80b92e",
                                  "name": "Home",
                                  "slug": "home"
                                },
                                {
                                  "id": "f9f3a87b-0fb2-4a01-946e-a387cb746007",
                                  "name": "B & B",
                                  "slug": "b_and_b"
                                },
                                {
                                  "id": "0b9fc489-ed6b-48c1-9196-f3e2e38d8bf5",
                                  "name": "Apartment",
                                  "slug": "apartment"
                                },
                                {
                                  "id": "7e5ae4c5-c640-418b-aba4-717507a08120",
                                  "name": "Cabin",
                                  "slug": "cabin"
                                },
                                {
                                  "id": "b1828891-70c3-4042-8ca2-d5e2a6de2de6",
                                  "name": "Castle",
                                  "slug": "castle"
                                },
                                {
                                  "id": "a7a6bbfc-43df-401e-911e-24ba243f20fe",
                                  "name": "Cave",
                                  "slug": "cave"
                                },
                                {
                                  "id": "4a71bd93-1242-4913-9602-ca701f7eb20a",
                                  "name": "Chalet",
                                  "slug": "chalet"
                                },
                                {
                                  "id": "586d1d5b-de2d-496b-a370-6ae164b95efa",
                                  "name": "Condo",
                                  "slug": "condo"
                                },
                                {
                                  "id": "03ff8322-a4e7-482a-8b18-4359549df6de",
                                  "name": "Cottage",
                                  "slug": "cottage"
                                },
                                {
                                  "id": "508a0a3e-b163-4ced-bb0d-1c46c217d1fc",
                                  "name": "Country home",
                                  "slug": "country_home"
                                },
                                {
                                  "id": "ac2a8846-e9a1-4daf-b7ee-f27451766b54",
                                  "name": "Dorm",
                                  "slug": "dorm"
                                },
                                {
                                  "id": "02d04ee0-9fd5-4a29-b5f5-6f6418a65400",
                                  "name": "Farm home",
                                  "slug": "farm_home"
                                },
                                {
                                  "id": "764bc866-4c1e-4c0e-b0b6-a34dd2830f42",
                                  "name": "Guest suite",
                                  "slug": "guest_suite"
                                },
                                {
                                  "id": "2050c20e-c8c8-4e14-b924-d928b25ed1bf",
                                  "name": "Guesthouse",
                                  "slug": "guesthouse"
                                },
                                {
                                  "id": "119e5a34-be56-478d-b6d9-f45e54c835c1",
                                  "name": "Hostel",
                                  "slug": "hostel"
                                },
                                {
                                  "id": "26644c5d-3a84-4d86-a68e-90a472ece357",
                                  "name": "Hut",
                                  "slug": "hut"
                                },
                                {
                                  "id": "43edeee1-3f8f-4522-bad8-9850784c22fc",
                                  "name": "Inn",
                                  "slug": "inn"
                                },
                                {
                                  "id": "d3a197f3-323d-4d74-8e91-2590fdcfd5d1",
                                  "name": "Island",
                                  "slug": "island"
                                },
                                {
                                  "id": "98808835-4095-4c34-b44d-ced112450ded",
                                  "name": "Loft",
                                  "slug": "loft"
                                },
                                {
                                  "id": "486d93ca-516a-430c-a28e-d1874ec91c07",
                                  "name": "Nature lodge",
                                  "slug": "nature_lodge"
                                },
                                {
                                  "id": "cc8bf2c3-cbb8-4a6f-801f-04c880d59a8a",
                                  "name": "Other",
                                  "slug": "other"
                                },
                                {
                                  "id": "b10c9df7-9948-4f25-b5d6-3907c1f76d59",
                                  "name": "Shelter",
                                  "slug": "shelter"
                                },
                                {
                                  "id": "2e39882d-b876-448e-abc4-3b88c9042c6c",
                                  "name": "Timeshare",
                                  "slug": "timeshare"
                                },
                                {
                                  "id": "2d29f94c-f56b-4df7-be18-f80d83a793ee",
                                  "name": "Tree house",
                                  "slug": "tree_house"
                                },
                                {
                                  "id": "ff312888-d8f1-47ee-b304-23ca547b3fec",
                                  "name": "Vacation home",
                                  "slug": "vacation_home"
                                },
                                {
                                  "id": "b48eb885-0481-4f52-9284-62fa8497f612",
                                  "name": "Villa",
                                  "slug": "villa"
                                },
                                {
                                  "id": "81dba374-5c9b-4872-88ea-08582b19dbcb",
                                  "name": "Beach house",
                                  "slug": "beach_house"
                                },
                                {
                                  "id": "c9347a78-b72e-444e-9b38-5e6d9a22d6a9",
                                  "name": "Boat",
                                  "slug": "boat"
                                },
                                {
                                  "id": "8f59cc56-8606-4c72-9f98-be1dc74167c6",
                                  "name": "Boutique hotel",
                                  "slug": "boutique_hotel"
                                },
                                {
                                  "id": "bbba7ed2-9954-4b20-b9f6-63e0b86044b8",
                                  "name": "Camper\/RV",
                                  "slug": "camper"
                                },
                                {
                                  "id": "8a9f0bd6-471d-4641-9105-c8c4c0906201",
                                  "name": "Tent",
                                  "slug": "tent"
                                },
                                {
                                  "id": "ac743487-2026-4711-934a-9d115d0cf683",
                                  "name": "Townhouse",
                                  "slug": "townhouse"
                                },
                                {
                                  "id": "89df8861-f28e-4518-bbac-ddb72605ece0",
                                  "name": "Yurt",
                                  "slug": "yurt"
                                }
                             
                      ]
              }            


## Get properties [/api/properties GET]
Retrieves all properties

### api/v1/properties [GET]


+ Request (application/json)

        {
          "api_token": ""
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": [
                   {
                          "id": "32947fd1-63c2-4630-8b6f-d2cae2c283f7",
                          "name": "this is just test",
                          "space": {
                            "type_of_rent": "fb758944-36e2-4936-bdd2-11c16409d541",
                            "only_for_guests": false,
                            "guests_count": 1,
                            "listing_type": "hotel",
                            "listing_category": "bbba7ed2-9954-4b20-b9f6-63e0b86044b8",
                            "bedrooms_count": 1,
                            "beds_count": 4,
                            "washrooms_count": 1,
                            "bedrooms": [
                              {
                                "id": "fb111ea7-24b8-4a63-b4f5-0301b1a96e0b",
                                "name": "1",
                                "beds": {
                                  "name": "common_spaces",
                                  "couch": "0",
                                  "sofa_bed": "0",
                                  "floor_mattress": "0"
                                }
                              },
                              {
                                "id": "d58fa2bb-d8db-4504-a2a9-a4ccc14dc879",
                                "name": "2",
                                "beds": {
                                  "name": "bedroom_3",
                                  "queen": "2",
                                  "double": "2",
                                  "single": "2",
                                  "sofa_bed": "2"
                                }
                              }
                            ]
                          },
                          "location": {
                            "country": "Canada",
                            "state": "QuéBec",
                            "city": "QuéBec",
                            "address": "rue fortier",
                            "zip_code": "J0B2T0",
                            "suite_building": "",
                            "latitude": "21.1632620",
                            "longitude": "79.0743910"
                          },
                          "amenities": [
                            "463dc946-4c8c-4271-8f8f-717e80168302",
                            "5afcd6c1-92db-47ef-89dc-67fe87b6cdae",
                            "d27fffb0-f6a1-42c4-970c-795b1f0c831f"
                          ],
                          "photos": [
                            {
                              "id": 1,
                              "caption": null,
                              "url": "http:\/\/localhost\/storage\/1\/360.jpeg",
                              "name": "360",
                              "is_main": true
                            },
                            {
                              "id": 2,
                              "caption": null,
                              "url": "http:\/\/localhost\/storage\/2\/360.jpeg",
                              "name": "360",
                              "is_main": false
                            },
                            {
                              "id": 3,
                              "caption": null,
                              "url": "http:\/\/localhost\/storage\/3\/360.jpeg",
                              "name": "360",
                              "is_main": false
                            }
                          ],
                          "description": {
                            "about_this_property_en": "lora lpsm doller content sit amit.",
                            "about_this_property_fr": "lora lpsm doller content sit amit.",
                            "birds_eye_view_en": "lora lpsm doller content sit amit.",
                            "birds_eye_view_fr": "lora lpsm doller content sit amit.",
                            "description_en": "lora lpsm doller content sit amit.",
                            "description_fr": "lora lpsm doller content sit amit.",
                            "home_access_en": "lora lpsm doller content sit amit.",
                            "home_access_fr": "lora lpsm doller content sit amit.",
                            "host_availibility_en": "lora lpsm doller content sit amit.",
                            "host_availibility_fr": "lora lpsm doller content sit amit.",
                            "other_things_to_know_en": "lora lpsm doller content sit amit.",
                            "other_things_to_know_fr": "lora lpsm doller content sit amit.",
                            "title_en": "nagpur test property",
                            "title_fr": "nagpur test property",
                            "travelling_around_en": "lora lpsm doller content sit amit.",
                            "travelling_around_fr": "lora lpsm doller content sit amit."
                          },
                          "booking_settings": {
                            "instant_booking": false,
                            "guest_qualifications": {
                              "guest_photo": true,
                              "guest_email": true,
                              "guest_payement": true
                            },
                            "house_rules": {
                              "allow_childrens": true,
                              "allow_infants": true,
                              "allow_pets": false,
                              "allow_smoking": false,
                              "allow_parties": false,
                              "other_rules": "other rules"
                            },
                            "guest_expectations": {
                              "must_climb_stairs": true,
                              "potential_for_noise": false,
                              "pet_live_on_property": false,
                              "no_parking_on_property": true,
                              "some_spaces_are_shared": false,
                              "amenity_limitations": false
                            },
                            "check_in_hour": 0,
                            "check_out_hour": 0,
                            "min_stay_count": 1,
                            "max_stay_count": 0,
                            "min_stay_type": "Nights",
                            "max_stay_type": "Nights",
                            "booking_window": "0",
                            "cancellation": "Flexible"
                          },
                          "calendar": {
                            "dates": [
                              {
                                    "id": "a59354ef-97cf-4922-a5d1-282070cce691",
                                    "price": 200,
                                    "note": "",
                                    "is_blocked": true,
                                    "date": "2019-11-29T00:00:00.000000Z"
                                  },
                                  {
                                    "id": "9a58d80d-3b54-47e9-be43-3c6b5960fba0",
                                    "price": 200,
                                    "note": "",
                                    "is_blocked": true,
                                    "date": "2019-11-30T00:00:00.000000Z"
                                  },
                                  {
                                    "id": "2b20ae7c-25d7-4f1e-a9b7-f14981c6f557",
                                    "price": 100,
                                    "note": "",
                                    "is_blocked": true,
                                    "date": "2019-12-01T00:00:00.000000Z"
                                  },
                                  {
                                    "id": "4a8876bb-b589-41ff-b181-e723dc1f575d",
                                    "price": 100,
                                    "note": "",
                                    "is_blocked": true,
                                    "date": "2019-12-02T00:00:00.000000Z"
                                  }
                            ]
                          },
                          "pricing": {
                            "cleaning_fee": 0,
                            "security_deposit": 0,
                            "currency": "USD",
                            "extra_guest_count": 0,
                            "extra_guest_price": 10,
                            "base_price": 10,
                            "price_per_weekend": 0,
                            "monthly_discount": 30,
                            "weekly_discount": 10
                          },
                          "guest_material": {
                            "wifi_name": "",
                            "wifi_password": "",
                            "house_manual": "",
                            "self_checking": false,
                            "smart_lock": false,
                            "keypad": false,
                            "lockbox": false,
                            "doorman": false
                          },
                          "status": "published"
                        }
                      
                  ]
              }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }

## Create properties [/api/v1/properties POST]
Create propertie 

### api/v1/properties [POST]
+ Request (application/json)

    + property
    + `name` required string.
    + `type_of_rent`  required string. 
    + `only_for_guests`  required boolean.
    + `guests_count`  required integer.
    + `listing_category`  required string.
    + `bedrooms_count`  required integer.
    + `beds_count`  required integer.
    + `washrooms_count`  required integer.
    + `instant_booking`  required boolean.
    + `check_in_hour`  required integer.
    + `check_out_hour`  required integer.
    + `min_stay_count`  required integer.
    + `max_stay_count`  required integer
    + `min_stay_type`  required string.
    + `max_stay_type`  required string.
    + `booking_window`  required string.
    + `cancellation`  required string.
    + `cleaning_fee`  required numeric.
    + `security_deposit`  required numeric.
    + `currency`  required string.
    + `extra_guest_count`  required integer.
    + `extra_guest_price`  required numeric.
    + `base_price`  required numeric.
    + `price_per_weekend`  required numeric.
    + `monthly_discount`  required numeric.
    + `weekly_discount`  required numeric.
    + `self_checking`  required boolean.
    + `smart_lock`  required boolean.
    + `keypad`  required boolean.
    + `lockbox`  required boolean.
    + `wifi_name` string.
    + `wifi_password` string.
    + `house_manual` string.
    
     
    

    + Body

            {
              "api_token": "",
              "name": "this is a new name",
              "space": {
                "type_of_rent": "c16062f8-e04e-4a8e-a4ad-b3b922cb51e6",
                "only_for_guests": false,
                "guests_count": 1,
                "listing_category": "e9bab115-a094-4c04-90ca-74f4eab31161",
                "bedrooms_count": 1,
                "beds_count": 1,
                "washrooms_count": 1
              },
              "booking_settings": {
                "instant_booking": false,
                "check_in_hour": 7,
                "check_out_hour": 0,
                "min_stay_count": 1,
                "max_stay_count": 0,
                "min_stay_type": "nights",
                "max_stay_type": "nights",
                "booking_window": "9_months_into_the_future",
                "cancellation": "flexible"
              },
             "pricing": {
                "cleaning_fee": 222,
                "security_deposit": 0,
                "currency": "CAD",
                "extra_guest_count": 0,
                "extra_guest_price": 0,
                "base_price": 222,
                "price_per_weekend": 222,
                "monthly_discount": 30,
                "weekly_discount": 10
              },
              "guest_material": {
                "wifi_name": null,
                "wifi_password": null,
                "house_manual": null,
                "self_checking": false,
                "smart_lock": true,
                "keypad": false,
                "lockbox": false,
                "doorman": false
              }
                                
            }
            



            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": {
                    "id": "f5904c11-1f34-4b28-99c8-38f65f982b1c",
                    "name": "this is a new name",
                    "space": {
                      "type_of_rent": "c16062f8-e04e-4a8e-a4ad-b3b922cb51e6",
                      "only_for_guests": true,
                      "guests_count": 1,
                      "listing_type": "hotel",
                      "listing_category": "e9bab115-a094-4c04-90ca-74f4eab31161",
                      "bedrooms_count": 1,
                      "beds_count": 1,
                      "washrooms_count": 1,
                      "bedrooms": []
                    },
                    "location": {
                      "country": "",
                      "state": "",
                      "city": "",
                      "address": "",
                      "zip_code": "",
                      "suite_building": ""
                    },
                    "amenities": [],
                    "photos_url": [],
                    "photos": [],
                    "description": {
                      "about_this_property_en": "",
                      "about_this_property_fr": "",
                      "birds_eye_view_en": "",
                      "birds_eye_view_fr": "",
                      "description_en": "",
                      "description_fr": "",
                      "home_access_en": "",
                      "home_access_fr": "",
                      "host_availibility_en": "",
                      "host_availibility_fr": "",
                      "other_things_to_know_en": "",
                      "other_things_to_know_fr": "",
                      "title_en": "",
                      "title_fr": "",
                      "travelling_around_en": "",
                      "travelling_around_fr": ""
                    },
                    "booking_settings": {
                      "instant_booking": false,
                      "guest_qualifications": {
                        "guest_photo": false,
                        "guest_email": false,
                        "guest_payement": false
                      },
                      "house_rules": {
                        "allow_childrens": false,
                        "allow_infants": false,
                        "allow_pets": false,
                        "allow_smoking": false,
                        "allow_parties": false,
                        "other_rules": "other rules"
                      },
                      "guest_expectations": {
                        "must_climb_stairs": false,
                        "potential_for_noise": false,
                        "pet_live_on_property": false,
                        "no_parking_on_property": false,
                        "some_spaces_are_shared": false,
                        "amenity_limitations": false
                      },
                      "check_in_hour": 7,
                      "check_out_hour": 0,
                      "min_stay_count": 1,
                      "max_stay_count": 0,
                      "min_stay_type": "nights",
                      "max_stay_type": "nights",
                      "booking_window": "9",
                      "cancellation": "flexible"
                    },
                    "calendar": {
                      "dates": []
                    },
                    "pricing": {
                      "cleaning_fee": 222,
                      "security_deposit": 0,
                      "currency": "CAD",
                      "extra_guest_count": 0,
                      "extra_guest_price": null,
                      "base_price": 222,
                      "price_per_weekend": 222,
                      "monthly_discount": 30,
                      "weekly_discount": 10
                    },
                    "guest_material": {
                      "wifi_name": "",
                      "wifi_password": "",
                      "house_manual": "",
                      "self_checking": false,
                      "smart_lock": false,
                      "keypad": false,
                      "lockbox": false,
                      "doorman": false
                    },
                    "status": "paused"
                  }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }


+ Response 422 (application/json)

    + Body

             {
              "message": "The given data was invalid.",
              "errors": {
                "name": [
                  "The name field is required."
                ],
                "space.type_of_rent": [
                  "The space.type of rent field is required."
                ],
                "space.only_for_guests": [
                  "The space.only for guests field is required."
                ],
                "space.guests_count": [
                  "The space.guests count field is required."
                ],
                "space.listing_category": [
                  "The space.listing category field is required."
                ],
                "space.bedrooms_count": [
                  "The space.bedrooms count field is required."
                ],
                "space.beds_count": [
                  "The space.beds count field is required."
                ],
                "space.washrooms_count": [
                  "The space.washrooms count field is required."
                ],
                "booking_settings.instant_booking": [
                  "The booking settings.instant booking field is required."
                ],
                "booking_settings.check_in_hour": [
                  "The booking settings.check in hour field is required."
                ],
                "booking_settings.check_out_hour": [
                  "The booking settings.check out hour field is required."
                ],
                "booking_settings.min_stay_count": [
                  "The booking settings.min stay count field is required."
                ],
                "booking_settings.max_stay_count": [
                  "The booking settings.max stay count field is required."
                ],
                "booking_settings.min_stay_type": [
                  "The booking settings.min stay type field is required."
                ],
                "booking_settings.max_stay_type": [
                  "The booking settings.max stay type field is required."
                ],
                "booking_settings.booking_window": [
                  "The booking settings.booking window field is required."
                ],
                "booking_settings.cancellation": [
                  "The booking settings.cancellation field is required."
                ],
                "pricing.cleaning_fee": [
                  "The pricing.cleaning fee field is required."
                ],
                "pricing.security_deposit": [
                  "The pricing.security deposit field is required."
                ],
                "pricing.currency": [
                  "The pricing.currency field is required."
                ],
                "pricing.extra_guest_count": [
                  "The pricing.extra guest count field is required."
                ],
                "pricing.extra_guest_price": [
                  "The pricing.extra guest price field is required."
                ],
                "pricing.base_price": [
                  "The pricing.base price field is required."
                ],
                "pricing.price_per_weekend": [
                  "The pricing.price per weekend field is required."
                ],
                "pricing.monthly_discount": [
                  "The pricing.monthly discount field is required."
                ],
                "pricing.weekly_discount": [
                  "The pricing.weekly discount field is required."
                ],
                "guest_material.self_checking": [
                  "The guest material.self checking field is required."
                ],
                "guest_material.smart_lock": [
                  "The guest material.smart lock field is required."
                ],
                "guest_material.keypad": [
                  "The guest material.keypad field is required."
                ],
                "guest_material.lockbox": [
                  "The guest material.lockbox field is required."
                ],
                "guest_material.doorman": [
                  "The guest material.doorman field is required."
                ]
              }
            }
            
            
            
## Get property [/api/v1/properties/{uuid} GET] 
Show property associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid} [GET]


+ Request (application/json)

        {
          "api_token": ""
         
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": {
                    "id": "f5904c11-1f34-4b28-99c8-38f65f982b1c",
                    "name": "this is a new name",
                    "space": {
                      "type_of_rent": "c16062f8-e04e-4a8e-a4ad-b3b922cb51e6",
                      "only_for_guests": true,
                      "guests_count": 1,
                      "listing_type": "hotel",
                      "listing_category": "e9bab115-a094-4c04-90ca-74f4eab31161",
                      "bedrooms_count": 1,
                      "beds_count": 1,
                      "washrooms_count": 1,
                      "bedrooms": []
                    },
                    "location": {
                      "country": "",
                      "state": "",
                      "city": "",
                      "address": "",
                      "zip_code": "",
                      "suite_building": ""
                    },
                    "amenities": [],
                    "photos_url": [],
                    "photos": [],
                    "description": {
                      "about_this_property_en": "",
                      "about_this_property_fr": "",
                      "birds_eye_view_en": "",
                      "birds_eye_view_fr": "",
                      "description_en": "",
                      "description_fr": "",
                      "home_access_en": "",
                      "home_access_fr": "",
                      "host_availibility_en": "",
                      "host_availibility_fr": "",
                      "other_things_to_know_en": "",
                      "other_things_to_know_fr": "",
                      "title_en": "",
                      "title_fr": "",
                      "travelling_around_en": "",
                      "travelling_around_fr": ""
                    },
                    "booking_settings": {
                      "instant_booking": false,
                      "guest_qualifications": {
                        "guest_photo": false,
                        "guest_email": false,
                        "guest_payement": false
                      },
                      "house_rules": {
                        "allow_childrens": false,
                        "allow_infants": false,
                        "allow_pets": false,
                        "allow_smoking": false,
                        "allow_parties": false,
                        "other_rules": "other rules"
                      },
                      "guest_expectations": {
                        "must_climb_stairs": false,
                        "potential_for_noise": false,
                        "pet_live_on_property": false,
                        "no_parking_on_property": false,
                        "some_spaces_are_shared": false,
                        "amenity_limitations": false
                      },
                      "check_in_hour": 7,
                      "check_out_hour": 0,
                      "min_stay_count": 1,
                      "max_stay_count": 0,
                      "min_stay_type": "nights",
                      "max_stay_type": "nights",
                      "booking_window": "9",
                      "cancellation": "flexible"
                    },
                    "calendar": {
                      "dates": []
                    },
                    "pricing": {
                      "cleaning_fee": 222,
                      "security_deposit": 0,
                      "currency": "CAD",
                      "extra_guest_count": 0,
                      "extra_guest_price": null,
                      "base_price": 222,
                      "price_per_weekend": 222,
                      "monthly_discount": 30,
                      "weekly_discount": 10
                    },
                    "guest_material": {
                      "wifi_name": "",
                      "wifi_password": "",
                      "house_manual": "",
                      "self_checking": false,
                      "smart_lock": false,
                      "keypad": false,
                      "lockbox": false,
                      "doorman": false
                    },
                    "status": "paused"
                  }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }


+ Response 404 (application/json)

    + Body

             {
              "errors": "Resource not found!"
             
            }

## Set property [/api/v1/properties/{uuid} PUT] 
Edit property associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property

            
### api/v1/properties/{uuid} [PUT]
+ Request (application/json)

    + property
    + `name` required string.
    + `type_of_rent`  required string. 
    + `only_for_guests`  required boolean.
    + `guests_count`  required integer.
    + `listing_category`  required string.
    + `bedrooms_count`  required integer.
    + `beds_count`  required integer.
    + `washrooms_count`  required integer.
    + `instant_booking`  required boolean.
    + `check_in_hour`  required integer.
    + `check_out_hour`  required integer.
    + `min_stay_count`  required integer.
    + `max_stay_count`  required integer
    + `min_stay_type`  required string.
    + `max_stay_type`  required string.
    + `booking_window`  required string.
    + `cancellation`  required string.
    + `cleaning_fee`  required numeric.
    + `security_deposit`  required numeric.
    + `currency`  required string.
    + `extra_guest_count`  required integer.
    + `extra_guest_price`  required numeric.
    + `base_price`  required numeric.
    + `price_per_weekend`  required numeric.
    + `monthly_discount`  required numeric.
    + `weekly_discount`  required numeric.
    + `self_checking`  required boolean.
    + `smart_lock`  required boolean.
    + `keypad`  required boolean.
    + `lockbox`  required boolean.
    + `wifi_name` string.
    + `wifi_password` string.
    + `house_manual` string.    
    

    + Body

            {
              "api_token": "",
              "name": "this is a new name",
              "space": {
                "type_of_rent": "c16062f8-e04e-4a8e-a4ad-b3b922cb51e6",
                "only_for_guests": false,
                "guests_count": 1,
                "listing_category": "e9bab115-a094-4c04-90ca-74f4eab31161",
                "bedrooms_count": 1,
                "beds_count": 1,
                "washrooms_count": 1
              },
              "booking_settings": {
                "instant_booking": false,
                "check_in_hour": 7,
                "check_out_hour": 0,
                "min_stay_count": 1,
                "max_stay_count": 0,
                "min_stay_type": "nights",
                "max_stay_type": "nights",
                "booking_window": "9_months_into_the_future",
                "cancellation": "flexible"
              },
             "pricing": {
                "cleaning_fee": 222,
                "security_deposit": 0,
                "currency": "CAD",
                "extra_guest_count": 0,
                "extra_guest_price": 0,
                "base_price": 222,
                "price_per_weekend": 222,
                "monthly_discount": 30,
                "weekly_discount": 10
              },
              "guest_material": {
                "wifi_name": null,
                "wifi_password": null,
                "house_manual": null,
                "self_checking": false,
                "smart_lock": true,
                "keypad": false,
                "lockbox": false,
                "doorman": false
              }
                                
            }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": {
                    "id": "f5904c11-1f34-4b28-99c8-38f65f982b1c",
                    "name": "this is a new name",
                    "space": {
                      "type_of_rent": "c16062f8-e04e-4a8e-a4ad-b3b922cb51e6",
                      "only_for_guests": true,
                      "guests_count": 1,
                      "listing_type": "hotel",
                      "listing_category": "e9bab115-a094-4c04-90ca-74f4eab31161",
                      "bedrooms_count": 1,
                      "beds_count": 1,
                      "washrooms_count": 1,
                      "bedrooms": []
                    },
                    "location": {
                      "country": "",
                      "state": "",
                      "city": "",
                      "address": "",
                      "zip_code": "",
                      "suite_building": ""
                    },
                    "amenities": [],
                    "photos_url": [],
                    "photos": [],
                    "description": {
                      "about_this_property_en": "",
                      "about_this_property_fr": "",
                      "birds_eye_view_en": "",
                      "birds_eye_view_fr": "",
                      "description_en": "",
                      "description_fr": "",
                      "home_access_en": "",
                      "home_access_fr": "",
                      "host_availibility_en": "",
                      "host_availibility_fr": "",
                      "other_things_to_know_en": "",
                      "other_things_to_know_fr": "",
                      "title_en": "",
                      "title_fr": "",
                      "travelling_around_en": "",
                      "travelling_around_fr": ""
                    },
                    "booking_settings": {
                      "instant_booking": false,
                      "guest_qualifications": {
                        "guest_photo": false,
                        "guest_email": false,
                        "guest_payement": false
                      },
                      "house_rules": {
                        "allow_childrens": false,
                        "allow_infants": false,
                        "allow_pets": false,
                        "allow_smoking": false,
                        "allow_parties": false,
                        "other_rules": "other rules"
                      },
                      "guest_expectations": {
                        "must_climb_stairs": false,
                        "potential_for_noise": false,
                        "pet_live_on_property": false,
                        "no_parking_on_property": false,
                        "some_spaces_are_shared": false,
                        "amenity_limitations": false
                      },
                      "check_in_hour": 7,
                      "check_out_hour": 0,
                      "min_stay_count": 1,
                      "max_stay_count": 0,
                      "min_stay_type": "nights",
                      "max_stay_type": "nights",
                      "booking_window": "9",
                      "cancellation": "flexible"
                    },
                    "calendar": {
                      "dates": []
                    },
                    "pricing": {
                      "cleaning_fee": 222,
                      "security_deposit": 0,
                      "currency": "CAD",
                      "extra_guest_count": 0,
                      "extra_guest_price": null,
                      "base_price": 222,
                      "price_per_weekend": 222,
                      "monthly_discount": 30,
                      "weekly_discount": 10
                    },
                    "guest_material": {
                      "wifi_name": "",
                      "wifi_password": "",
                      "house_manual": "",
                      "self_checking": false,
                      "smart_lock": false,
                      "keypad": false,
                      "lockbox": false,
                      "doorman": false
                    },
                    "status": "paused"
                  }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }

+ Response 404 (application/json)

    + Body

             {
                  "errors": "Resource not found!"
             }
             

+ Response 422 (application/json)

    + Body

             {
              "message": "The given data was invalid.",
              "errors": {
                "name": [
                  "The name field is required."
                ],
                "space.type_of_rent": [
                  "The space.type of rent field is required."
                ],
                "space.only_for_guests": [
                  "The space.only for guests field is required."
                ],
                "space.guests_count": [
                  "The space.guests count field is required."
                ],
                "space.listing_category": [
                  "The space.listing category field is required."
                ],
                "space.bedrooms_count": [
                  "The space.bedrooms count field is required."
                ],
                "space.beds_count": [
                  "The space.beds count field is required."
                ],
                "space.washrooms_count": [
                  "The space.washrooms count field is required."
                ],
                "booking_settings.instant_booking": [
                  "The booking settings.instant booking field is required."
                ],
                "booking_settings.check_in_hour": [
                  "The booking settings.check in hour field is required."
                ],
                "booking_settings.check_out_hour": [
                  "The booking settings.check out hour field is required."
                ],
                "booking_settings.min_stay_count": [
                  "The booking settings.min stay count field is required."
                ],
                "booking_settings.max_stay_count": [
                  "The booking settings.max stay count field is required."
                ],
                "booking_settings.min_stay_type": [
                  "The booking settings.min stay type field is required."
                ],
                "booking_settings.max_stay_type": [
                  "The booking settings.max stay type field is required."
                ],
                "booking_settings.booking_window": [
                  "The booking settings.booking window field is required."
                ],
                "booking_settings.cancellation": [
                  "The booking settings.cancellation field is required."
                ],
                "pricing.cleaning_fee": [
                  "The pricing.cleaning fee field is required."
                ],
                "pricing.security_deposit": [
                  "The pricing.security deposit field is required."
                ],
                "pricing.currency": [
                  "The pricing.currency field is required."
                ],
                "pricing.extra_guest_count": [
                  "The pricing.extra guest count field is required."
                ],
                "pricing.extra_guest_price": [
                  "The pricing.extra guest price field is required."
                ],
                "pricing.base_price": [
                  "The pricing.base price field is required."
                ],
                "pricing.price_per_weekend": [
                  "The pricing.price per weekend field is required."
                ],
                "pricing.monthly_discount": [
                  "The pricing.monthly discount field is required."
                ],
                "pricing.weekly_discount": [
                  "The pricing.weekly discount field is required."
                ],
                "guest_material.self_checking": [
                  "The guest material.self checking field is required."
                ],
                "guest_material.smart_lock": [
                  "The guest material.smart lock field is required."
                ],
                "guest_material.keypad": [
                  "The guest material.keypad field is required."
                ],
                "guest_material.lockbox": [
                  "The guest material.lockbox field is required."
                ],
                "guest_material.doorman": [
                  "The guest material.doorman field is required."
                ]
              }
            }

## Delete property [/api/v1/properties/{uuid} Delete] 
Delete property associated to the provided property id

+ Parameters

    + uuid (required, string) ... The unique id of the property

            
### api/v1/properties/{uuid} [DELETE]


+ Request (application/json)

        {
          "api_token": ""
         
        }
            

+ Response 200 (application/json)

    
    + Body

            {
                  "data": {
                    "id": "f5904c11-1f34-4b28-99c8-38f65f982b1c",
                    "name": "this is a new name",
                    "space": {
                      "type_of_rent": "c16062f8-e04e-4a8e-a4ad-b3b922cb51e6",
                      "only_for_guests": true,
                      "guests_count": 1,
                      "listing_type": "hotel",
                      "listing_category": "e9bab115-a094-4c04-90ca-74f4eab31161",
                      "bedrooms_count": 1,
                      "beds_count": 1,
                      "washrooms_count": 1,
                      "bedrooms": []
                    },
                    "location": {
                      "country": "",
                      "state": "",
                      "city": "",
                      "address": "",
                      "zip_code": "",
                      "suite_building": ""
                    },
                    "amenities": [],
                    "photos_url": [],
                    "photos": [],
                    "description": {
                      "about_this_property_en": "",
                      "about_this_property_fr": "",
                      "birds_eye_view_en": "",
                      "birds_eye_view_fr": "",
                      "description_en": "",
                      "description_fr": "",
                      "home_access_en": "",
                      "home_access_fr": "",
                      "host_availibility_en": "",
                      "host_availibility_fr": "",
                      "other_things_to_know_en": "",
                      "other_things_to_know_fr": "",
                      "title_en": "",
                      "title_fr": "",
                      "travelling_around_en": "",
                      "travelling_around_fr": ""
                    },
                    "booking_settings": {
                      "instant_booking": false,
                      "guest_qualifications": {
                        "guest_photo": false,
                        "guest_email": false,
                        "guest_payement": false
                      },
                      "house_rules": {
                        "allow_childrens": false,
                        "allow_infants": false,
                        "allow_pets": false,
                        "allow_smoking": false,
                        "allow_parties": false,
                        "other_rules": "other rules"
                      },
                      "guest_expectations": {
                        "must_climb_stairs": false,
                        "potential_for_noise": false,
                        "pet_live_on_property": false,
                        "no_parking_on_property": false,
                        "some_spaces_are_shared": false,
                        "amenity_limitations": false
                      },
                      "check_in_hour": 7,
                      "check_out_hour": 0,
                      "min_stay_count": 1,
                      "max_stay_count": 0,
                      "min_stay_type": "nights",
                      "max_stay_type": "nights",
                      "booking_window": "9",
                      "cancellation": "flexible"
                    },
                    "calendar": {
                      "dates": []
                    },
                    "pricing": {
                      "cleaning_fee": 222,
                      "security_deposit": 0,
                      "currency": "CAD",
                      "extra_guest_count": 0,
                      "extra_guest_price": null,
                      "base_price": 222,
                      "price_per_weekend": 222,
                      "monthly_discount": 30,
                      "weekly_discount": 10
                    },
                    "guest_material": {
                      "wifi_name": "",
                      "wifi_password": "",
                      "house_manual": "",
                      "self_checking": false,
                      "smart_lock": false,
                      "keypad": false,
                      "lockbox": false,
                      "doorman": false
                    },
                    "status": "paused"
                  }
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }


+ Response 404 (application/json)

    + Body

             {
              "errors": "Resource not found!"
             
            }
            

## Set property status [/api/v1/properties/{uuid}/set-status PUT] 
Edit property  status 

+ Parameters

    + uuid (required, string) ... The unique id of the property

### api/v1/properties/{uuid}/set-status [PUT]
+ Request (application/json)

    

    + Status 
    + `status` required string.

    + Body

            {
              "api_token": "",
              "status" : "published"
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                "message": "success"  
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }


+ Response 404 (application/json)

    + Body

             {
              "errors": "Resource not found!"
             
            }
            

##Retrieve current host account data [/api/v1/hosts/me GET] 
Retrieve current host account data


### api/v1/hosts/me [GET]
+ Request (application/json)

    
    + Body

            {
              "api_token": ""
              
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                 "data": {
                    "id": "799ea91a-5d51-4ef6-8e02-02f930447227",
                    "firstname": "wechalet",
                    "lastname": "wechalet",
                    "birthdate": "1993/12/10",
                    "language": "en",
                    "gender": "male",
                    "location": "Earth",
                    "about_me": "host",
                    "secondary_email": null,
                    "secondary_phone": null,
                    "payout_email": null,
                    "avatar": "",
                    "email": "wechalet@wechalet.com",
                    "country_code": null,
                    "email_verified_at": null,
                    "phone_number": null,
                    "phone_number_verified_at": null
                  }  
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }



##guests for a host account [/api/v1/guests GET] 
Retrieve all the guests for a host account


### api/v1/guests [GET]
+ Request (application/json)

    
    + Body

            {
              "api_token": ""
              
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                 "data": [ 
                     {
                    "id": "799ea91a-5d51-4ef6-8e02-02f930447227",
                    "firstname": "wechalet",
                    "lastname": "wechalet",
                    "birthdate": "1993/12/10",
                    "language": "en",
                    "gender": "male",
                    "location": "Earth",
                    "about_me": "host",
                    "secondary_email": null,
                    "secondary_phone": null,
                    "payout_email": null,
                    "avatar": "",
                    "email": "wechalet@wechalet.com",
                    "country_code": null,
                    "email_verified_at": null,
                    "phone_number": null,
                    "phone_number_verified_at": null
                  }  
                ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }


## Get guest information [/api/v1/guests/{uuid} GET] 
Get a single guest information

+ Parameters

    + uuid (required, string) ... The unique id of the guest

### api/v1/guests/{uuid} [GET]
+ Request (application/json)


    + Body

            {
              "api_token": ""
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                "data": {
                    "id": "799ea91a-5d51-4ef6-8e02-02f930447227",
                    "firstname": "wechalet",
                    "lastname": "wechalet",
                    "birthdate": "1993/12/10",
                    "language": "en",
                    "gender": "male",
                    "location": "Earth",
                    "about_me": "host",
                    "secondary_email": null,
                    "secondary_phone": null,
                    "payout_email": null,
                    "avatar": "",
                    "email": "wechalet@wechalet.com",
                    "country_code": null,
                    "email_verified_at": null,
                    "phone_number": null,
                    "phone_number_verified_at": null
                  }    
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
             
+ Response 404 (application/json)

    + Body

             {
              "errors": "Resource not found!"
             
            }
            
             


## Get all the threads [/api/v1/inbox GET] 
Retreive all the threads fro the current the user

### api/v1/inbox [GET]

+ Response 200 (application/json)

    
    + Body

            {
                "data": [
                {
                    "id": "971ad04e-0ca1-4176-b912-083fe6522700",
                    "unread": 0,
                    "archived": false,
                    "type": "traveling",
                    "subject": {
                      "title": "",
                      "sub_title": "( Oct 5- Oct 8,2 Guests )"
                    },
                    "created_at": "13 Aug",
                    "creator": {
                      "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "firstname": "wechalet",
                      "lastname": "wechalet",
                      "language": "en",
                      "location": "Earth",
                      "avatar": "",
                      "email": "wechalet@wechalet.com",
                      "phone_number": null
                    },
                    "messages": [
                      {
                        "id": 658,
                        "body": "say hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      }
                    ]
                  }
                  ]
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }



            



## Create a thread [/api/v1/inbox POST] 
Contact a host for a property

### api/v1/inbox [POST]
+ Request (application/json)

    

    + Inbox
    + `property_id` required string.
    + `checkin` required date.
    + `checkout`  required date. 
    + `subject`  required string.
    + `guests_count`  required integer.
    + `message`  required string.

    + Body

            {
              "api_token": "",
              "property_id" : "528003bd-83da-4505-b42d-4535eb08019a",
              "checkin":  "2019-10-05",
              "checkout":  "2019-10-10", 
              "guests_count": "4", 
              "subject": "contact wechalet host", 
              "message": "hello"
              
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                "data": {
                    "id": "971ad04e-0ca1-4176-b912-083fe6522700",
                    "unread": 0,
                    "archived": false,
                    "type": "traveling",
                    "subject": {
                      "title": "",
                      "sub_title": "( Oct 5- Oct 8,2 Guests )"
                    },
                    "created_at": "13 Aug",
                    "creator": {
                      "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "firstname": "wechalet",
                      "lastname": "wechalet",
                      "language": "en",
                      "location": "Earth",
                      "avatar": "",
                      "email": "wechalet@wechalet.com",
                      "phone_number": null
                    },
                    "messages": [
                      {
                        "id": 658,
                        "body": "say hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      }
                    ]
                  }  
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }


+ Response 422 (application/json)

    + Body

             {
                  "message": "The given data was invalid.",
                  "errors": {
                    "property_id": [
                      "The property id field is required."
                    ],
                    "checkin": [
                      "The checkin field is required."
                    ],
                    "checkout": [
                      "The checkout field is required."
                    ],
                    "guests_count": [
                      "The guests count field is required."
                    ],
                    "subject": [
                      "The subject field is required."
                    ],
                    "message": [
                      "The message field is required."
                    ]
                  }
                }
                


## show thread [/api/v1/inbox/{uuid} GET] 
Show all the messages from a thread

+ Parameters

    + uuid (required, string) ... The unique id of the thread

### api/inbox/{uuid} [GET]
+ Request (application/json)


    + Body

            {
              "api_token": ""
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                "data": {
                    "id": "971ad04e-0ca1-4176-b912-083fe6522700",
                    "unread": 0,
                    "archived": false,
                    "type": "traveling",
                    "subject": {
                      "title": "",
                      "sub_title": "( Oct 5- Oct 8,2 Guests )"
                    },
                    "created_at": "13 Aug",
                    "creator": {
                      "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "firstname": "wechalet",
                      "lastname": "wechalet",
                      "language": "en",
                      "location": "Earth",
                      "avatar": "",
                      "email": "wechalet@wechalet.com",
                      "phone_number": null
                    },
                    "messages": [
                      {
                        "id": 658,
                        "body": "say hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      }
                    ]
                  }  
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
             




## Create a message [/api/v1/inbox/{uuid} PUT] 
Create a  message for a single thead

+ Parameters

    + uuid (required, string) ... The unique id of the thread

### api/v1/inbox/{uuid} [PUT]
+ Request (application/json)

    

    + Message
    + `message`  required string.

    + Body

            {
              "api_token": "",
              "message": "hello"
              
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                "data": {
                    "id": "971ad04e-0ca1-4176-b912-083fe6522700",
                    "unread": 0,
                    "archived": false,
                    "type": "traveling",
                    "subject": {
                      "title": "",
                      "sub_title": "( Oct 5- Oct 8,2 Guests )"
                    },
                    "created_at": "13 Aug",
                    "creator": {
                      "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "firstname": "wechalet",
                      "lastname": "wechalet",
                      "language": "en",
                      "location": "Earth",
                      "avatar": "",
                      "email": "wechalet@wechalet.com",
                      "phone_number": null
                    },
                    "messages": [
                      {
                        "id": 658,
                        "body": "say hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      },
                        {
                        "id": 659,
                        "body": "hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      }
                    ]
                  }  
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
               
            
## Mark thread as unread [/api/v1/inbox/{uuid}/unread PUT] 
Mark  the thread as unread

+ Parameters

    + uuid (required, string) ... The unique id of the thread

### api/v1/inbox/{uuid}/unread [PUT]
+ Request (application/json)

    + Body

            {
              "api_token": ""
              
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                "data": {
                    "id": "971ad04e-0ca1-4176-b912-083fe6522700",
                    "unread": 0,
                    "archived": false,
                    "type": "traveling",
                    "subject": {
                      "title": "",
                      "sub_title": "( Oct 5- Oct 8,2 Guests )"
                    },
                    "created_at": "13 Aug",
                    "creator": {
                      "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "firstname": "wechalet",
                      "lastname": "wechalet",
                      "language": "en",
                      "location": "Earth",
                      "avatar": "",
                      "email": "wechalet@wechalet.com",
                      "phone_number": null
                    },
                    "messages": [
                      {
                        "id": 658,
                        "body": "say hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      },
                        {
                        "id": 659,
                        "body": "hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      }
                    ]
                  }  
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
               
            


            
## Delete thread  [/api/v1/inbox/{uuid} DELETE] 
Delete thread

+ Parameters

    + uuid (required, string) ... The unique id of the thread

### api/v1/inbox/{uuid} [DELETE]
+ Request (application/json)

    + Body

            {
              "api_token": ""
              
            }
 

+ Response 200 (application/json)

    
    + Body

            {
                "data": {
                    "id": "971ad04e-0ca1-4176-b912-083fe6522700",
                    "unread": 0,
                    "archived": false,
                    "type": "traveling",
                    "subject": {
                      "title": "",
                      "sub_title": "( Oct 5- Oct 8,2 Guests )"
                    },
                    "created_at": "13 Aug",
                    "creator": {
                      "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                      "firstname": "wechalet",
                      "lastname": "wechalet",
                      "language": "en",
                      "location": "Earth",
                      "avatar": "",
                      "email": "wechalet@wechalet.com",
                      "phone_number": null
                    },
                    "messages": [
                      {
                        "id": 658,
                        "body": "say hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      },
                        {
                        "id": 659,
                        "body": "hello",
                        "creator": {
                          "id": "03fd385f-8997-4762-a166-bda1cfb3e174",
                          "firstname": "wechalet",
                          "lastname": "wechalet",
                          "language": "en",
                          "location": "Earth",
                          "avatar": "",
                          "email": "wechalet@wechalet.com",
                          "phone_number": null
                        }
                      }
                    ]
                  }  
            }

            

+ Response 400 (application/json)

    + Body

             {
                  "message": "Unauthenticated."
             }
               
            


+ Response 404 (application/json)

    + Body

             {
                  "message": "Resource not found !."
             }